<!--  
 * Unity - Communities
 * 
 * Community is critical to the student experience--but building community is 
 * just plain hard. Built on Communities and designed specifically for higher ed, 
 * Unity is a powerful networking tool to help you generate engagement and 
 * connect your campus.
 * 
 * Copyright (C) 2015 Motivis Learning Systems Inc.
 * 
 * This program is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 * 
 * To contact Motivis Learning Systems Inc.
 * 25 Pelham Road
 * Salem, NH 03790
 * unity@motivislearning.com
-->

<apex:component layout="none">
	<apex:attribute name="fl" description="" type="CommunityFieldLayout" required="true"/>
	<apex:attribute name="so" description="" type="SObject" required="true"/>
	<apex:attribute name="it" description="" type="SelectOption[]" required="false"/>
	<apex:attribute name="av" description="" type="String" required="false"/>
	<apex:variable var="index" value="{!0}"/>
	<apex:repeat value="{!fl.flds}" var="fld">
		<section class="CommunityFieldLayout">

			<label class="label">
				<apex:outputPanel layout="none" rendered="{!fld.tyrion}">
					<i class="fa fa-asterisk color-red" title="required"></i>&nbsp;
				</apex:outputPanel>
				{!fld.label}
			</label>

			<!-- INPUT -->
			<apex:outputLabel styleClass="input" rendered="{!fld.ftype == 'input'}">
				<apex:inputField id="inputId" value="{!so[fld.name]}" required="{!fld.tyrion}"/>
			</apex:outputLabel>

			<!-- EMAIL -->
			<apex:outputLabel styleClass="input" rendered="{!fld.ftype == 'email'}">
				<apex:inputField id="emailId" value="{!so[fld.name]}" required="{!fld.tyrion}"/>
			</apex:outputLabel>

			<!-- URL -->
			<apex:outputLabel styleClass="input" rendered="{!fld.ftype == 'url'}">
				<apex:inputField id="urlId" value="{!so[fld.name]}" required="{!fld.tyrion}"/>
			</apex:outputLabel>

			<!-- TEXTAREA -->
			<apex:outputLabel styleClass="textarea" rendered="{!fld.ftype == 'textarea'}">
				<apex:inputField value="{!so[fld.name]}" required="{!fld.tyrion}"/>
			</apex:outputLabel>

			<!-- CHECKBOX -->
			<apex:outputLabel styleClass="checkbox" rendered="{!AND(fld.ftype == 'checkbox',fld.label != 'Automatic Archiving')}">
				<apex:inputCheckbox value="{!so[fld.name]}" required="{!fld.tyrion}"/><i></i>
			</apex:outputLabel>

			<!-- RADIO FOR ARCHIVING-->
			<apex:outputLabel styleClass="radioOptions" rendered="{!AND(fld.ftype == 'checkbox',fld.label == 'Automatic Archiving')}">
				<apex:selectRadio value="{!av}" layout="pageDirection">
			        <apex:selectOptions value="{!it}"/>
			    </apex:selectRadio>
		    </apex:outputLabel>

			<!-- PICKLIST -->
			<apex:outputLabel styleClass="select" rendered="{!fld.ftype == 'picklist'}">
				<apex:inputField value="{!so[fld.name]}" required="{!fld.tyrion}"/>
				<i></i>
			</apex:outputLabel>

			<!-- MULTIPICKLIST -->
			<apex:outputPanel layout="none" rendered="{!fld.ftype == 'multipicklist'}">
				<apex:inputField id="msfld" value="{!so[fld.name]}" required="{!fld.tyrion}" styleClass="form-control"/>
				<i></i>
			</apex:outputPanel>

			<!-- DATE -->
			<apex:outputLabel styleClass="input" rendered="{!fld.ftype == 'date'}">
				<apex:inputField value="{!so[fld.name]}" required="{!fld.tyrion}" styleClass="cs-date"/>
			</apex:outputLabel>

			<!-- DATETIME -->
			<apex:outputLabel styleClass="input" rendered="{!fld.ftype == 'datetime'}">
				<apex:inputField value="{!so[fld.name]}" required="{!fld.tyrion}" styleClass="cs-datetime"/>
			</apex:outputLabel>

			<!-- INTEGER -->
			<apex:outputLabel styleClass="input" rendered="{!fld.ftype == 'integer'}">
				<apex:inputField id="integerId" value="{!so[fld.name]}"  required="{!fld.tyrion}"/>
			</apex:outputLabel>

			<!-- DOUBLE -->
			<apex:outputLabel styleClass="input" rendered="{!fld.ftype == 'double'}">
				<apex:inputField id="doubleId" value="{!so[fld.name]}"  required="{!fld.tyrion}"/><!-- !!!!!!!!!!!!!! -->
			</apex:outputLabel>

			<!-- REFERENCE -->
			<apex:outputLabel styleClass="input reflbl{!index}" rendered="{!fld.ftype == 'reference'}">
				<i id="text{!index}" class="icon-append fa fa-search"></i>
				<apex:inputField value="{!so[fld.name]}" required="{!fld.tyrion}"/>
				<script>
					jQuery('.reflbl{!index} #text{!index}.icon-append').detach().appendTo('.reflbl{!index} a');
					jQuery('.reflbl{!index} a').detach().prependTo('.reflbl{!index}').find('img').remove();
				</script>
				<apex:variable var="index" value="{!index + 1}"/>
			</apex:outputLabel>

			<!-- LABEL (other, not updateable) -->
			<apex:outputLabel styleClass="label" rendered="{!fld.ftype == 'label'}">
				<apex:outputField value="{!so[fld.name]}"/>
			</apex:outputLabel>
		</section>
	</apex:repeat>
	<script>
	//datetime
		if(jQuery('.cs-datetime')) {
			var currentdate = new Date(); 
			jQuery('.cs-datetime').datetimepicker({
				format: ucDateFormat() + ' ' + ucTimeFormat(),
				step:30,
				closeOnTimeSelect: true,
				lang: 'en'
			});
		}
		//date
		if(jQuery('.cs-date')) {
			jQuery('.cs-date').datetimepicker({
				timepicker:false,
				format: ucDateFormat(),
				closeOnDateSelect: true,
				lang: 'en'
			});
		}
		function ucDateFormat() {
			return !(UserContext && UserContext.dateTimeFormat) ? 'n/d/Y'
					: UserContext.dateFormat.replace('yyyy','Y').replace('yy','y').replace('MM','m').replace('M','n').replace('dd','d').replace('d','j');
		}
		function ucTimeFormat() {
			return !(UserContext && UserContext.timeFormat) ? 'h:m a'
					: UserContext.timeFormat.replace('mm','i').replace('a','A').replace('hh','g').replace('h','g').replace('HH','G').replace('H','G');
		}
		
		//multipicklist
		jQuery('select[id$=msfld]').show();
		jQuery('.multiSelectPicklistTable').hide();
	</script>
</apex:component>