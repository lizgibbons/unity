<apex:component controller="CommunityFeed_PeopleController">
	<apex:attribute name="feedPage" type="Boolean" default="false" required="false" description="panel for followers" />
    <apex:attribute name="profileFollowers" type="Boolean" default="false" required="false" description="panel for followers" />
    <apex:attribute name="profileFollowing" type="Boolean" default="false" required="false" description="panel for following" />
	<apex:attribute name="following" type="Boolean" default="false" required="false" description="panel for following" />
    <apex:attribute name="profFS" type="List" required="false" description="record types on community profile object" />
	<apex:attribute name="currentUsId" type="String" required="false" description=""/>

	<div ng-app="PeoplesApp" ng-controller="PeoplesController" id="profileFeedfollow" style="display: none;">
        
		<apex:outputPanel layout="none" rendered="{!feedPage}">
	        <h2 id="h2followers">{!$Label.LBL_Followers} ()</h2>
	        <div class="row">
	            <div class="col-md-8 col-sm-4 col-xs-6" ng-repeat="p in allPeople | peopleFollowMe:this | limitTo:page.pageSize">
	                <a href="{!$Page.UnityProfilePage}?id={{ p.MemberId }}" class="avatar-large it-followers">
	                    <img ng-src="{{ p.MemberPhotoUrl }}" src="/s.gif" alt="" />
	                </a>
	            </div>
	        </div>
	        <div class="text-center" id="viewAllFollowers">
	            <a href="" class="btn-outline-gray it-viewAllFollowers">{!$Label.LBL_View_All}</a>
	        </div>
            <hr/>
	        <h2 id="h2following">{!$Label.BTN_Following} ()</h2>
	        <div class="row">
	             <div class="col-md-8 col-sm-4 col-xs-6" ng-repeat="p in allPeople | peopleIFollowing:this | limitTo:page.pageSize">
	                <a href="{!$Page.UnityProfilePage}?id={{ p.MemberId }}" class="avatar-large it-followers">
	                    <img ng-src="{{ p.MemberPhotoUrl }}" src="/s.gif" alt="" />
	                </a>
	            </div>
	        </div>
	        <div class="text-center" id="viewAllFollowing">
	            <a href="" class="btn-outline-gray it-viewAllFollowing">{!$Label.LBL_View_All}</a>
	        </div>
        </apex:outputPanel>

        <apex:outputPanel layout="none" rendered="{!profileFollowers}">
            <h2 id="h2followers">{!$Label.LBL_Followers} ()</h2>
            <div class="row">
                <div class="col-sm-12">
                    <input type="text" ng-model="quickSearchQuery" class="search it-searchFollowers" placeholder="{!$Label.LBL_Search_followers}" value="" id="quickSearchInput" />
                </div>
                <div class="col-sm-offset-4 col-sm-8">
                     <select class="selectpicker" title="--{!$Label.LBL_Sort_By}--">
                        <apex:repeat var="sortItem" value="{!profFS}">
                        	<option>{!sortItem}</option>
                        </apex:repeat>
                    </select>
                </div>
            </div>
            <div class="row" id="profilefollowers">
                <div class="col-sm-12 col-md-8" ng-repeat="p in allPeople | quickSort:this | quickSearch:this | peopleFollowMe:this | limitTo:page.pageFollowersSize">
                    <div class="card user-card">
                        <div class="card-header">
                            <a href="{!$Page.UnityProfilePage}?id={{ p.MemberId }}" class="avatar it-profilePhoto"><img ng-src="{{ p.MemberPhotoUrl }}" /></a>
                            <h3>
                                <a href="{!$Page.UnityProfilePage}?id={{ p.MemberId }}" class="it-profile">{{ replaceCharacters(p.MemberName) }}</a>
                                <small>{{ replaceCharacters(p.MemberRole) }}</small>
                                <a id="f{{ p.MemberId }}" ng-hide="p.isSubscribeUser == null || p.isSubscribeUser == true" class="btn-fill-custom it-followBtn" ng-click="followAction(p);">{!$Label.BTN_Follow}</a>
                                <p id="uf{{ p.MemberId }}" ng-hide="p.isSubscribeUser == null || p.isSubscribeUser == false"><i class="lrm lrm-check"></i>&nbsp;{!$Label.BTN_Following}</p>
                            </h3>
                            <div id="dr{{ p.MemberId }}" class="dropmenu it-dropmenu" ng-hide="p.isSubscribeUser == null">
                                <a role="button" onclick="dropmenu(this);"><i class="lrm lrm-more"></i></a>
                                <ul>
                                    <li><a role="button" data-href="#sendMessageModal" class="it-dropmenuOptionA simpleModal">{!$Label.LBL_Message}</a></li>
                                    <li ng-hide="p.isSubscribeUser == false"><a role="button" class="it-dropmenuOptionB" ng-click="unFollowAction(p);">{!$Label.LBL_Unfollow}</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </apex:outputPanel>

    </div>
    
    <div class="loader" style="display:none;">
        <div class="ispinner gray animating">
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
            <div class="ispinner-blade"></div>
        </div>
    </div>
          
    <div id="sendMessageModal" class="simpleModalBox" >
        <div class="backdrop"></div>
        <section class="modalContent">
            <div class="inner">
                <div class="row">
                    <div class="column col-xs-24">
                        <div class="card">
                            <div class="card-content multiselectHolder">
                                <a role="button" class="minimize closeModal it-closeModalX"><i class="lrm lrm-close"></i></a>
                                <h2>{!$Label.LBL_Send_Message}</h2>
                                <p class="list-header"><strong>{!$Label.LBL_To}</strong></p>
                                <div class="multiselect">
                                    <div class="blockHolder"></div>
                                    <input class="multiselectInput it-multiSelectInput1" type="text" placeholder="" />
                                    <div class="menuSelect">
                                        <!-- <ul>
                                            <li class="selectToggle">
                                                <a class="classTitle addItem it-multiSelectItem-<?php echo $optionCounter; ?> option-<?php echo $optionCounter; $optionCounter++; ?>"><strong>Frequently Contacted</strong> (4)</a>
                                                <a class="expandedArrow"><span class="icon-ml_011ChevronDown"></span></a>
                                                <ul>
                                                <?php for ($i = 0; $i < 4 ; $i++): ?>
                                                    <li class="student addItem it-multiSelectItem-<?php echo $optionCounter; ?> option-<?php echo $optionCounter; $optionCounter++; ?>"><a><?php echo $firstname[array_rand($firstname, 1)] . ' ' . $lastname[array_rand($lastname, 1)]; ?></a></li>
                                                <?php endfor; ?>
                                                </ul>
                                            </li>
                                            <li class="selectToggle">
                                                <a class="classTitle addItem it-multiSelectItem-<?php echo $optionCounter; ?> option-<?php echo $optionCounter; $optionCounter++; ?>"><strong>Friends</strong> (8)</a>
                                                <a class="expandedArrow"><span class="icon-ml_011ChevronDown"></span></a>
                                                <ul>
                                                <?php for ($i = 0; $i < 8 ; $i++): ?>
                                                    <li class="student addItem it-multiSelectItem-<?php echo $optionCounter; ?> option-<?php echo $optionCounter; $optionCounter++; ?>"><a><?php echo $firstname[array_rand($firstname, 1)] . ' ' . $lastname[array_rand($lastname, 1)]; ?></a></li>
                                                <?php endfor; ?>
                                                </ul>
                                            </li>
                                            <li class="student addItem it-multiSelectItem-<?php echo $optionCounter; ?> option-<?php echo $optionCounter; $optionCounter++; ?>"><a><?php echo $firstname[array_rand($firstname, 1)] . ' ' . $lastname[array_rand($lastname, 1)]; ?></a></li>
                                            <li class="student addItem it-multiSelectItem-<?php echo $optionCounter; ?> option-<?php echo $optionCounter; $optionCounter++; ?>"><a><?php echo $firstname[array_rand($firstname, 1)] . ' ' . $lastname[array_rand($lastname, 1)]; ?></a></li>
                                            <li class="selectToggle">
                                                <a class="classTitle addItem it-multiSelectItem-<?php echo $optionCounter; ?> option-<?php echo $optionCounter; $optionCounter++; ?>"><strong>Professors</strong> (7)</a>
                                                <a class="expandedArrow"><span class="icon-ml_011ChevronDown"></span></a>
                                                <ul>
                                                <?php for ($i = 0; $i < 7 ; $i++): ?>
                                                    <li class="student addItem it-multiSelectItem-<?php echo $optionCounter; ?> option-<?php echo $optionCounter; $optionCounter++; ?>"><a><?php echo $firstname[array_rand($firstname, 1)] . ' ' . $lastname[array_rand($lastname, 1)]; ?></a></li>
                                                <?php endfor; ?>
                                                </ul>
                                            </li>
                                            <li class="student addItem it-multiSelectItem-<?php echo $optionCounter; ?> option-<?php echo $optionCounter; $optionCounter++; ?>"><a><?php echo $firstname[array_rand($firstname, 1)] . ' ' . $lastname[array_rand($lastname, 1)]; ?></a></li>
                                        </ul> -->
                                    </div>
                                </div>
                                <p class="list-header"><strong>{!$Label.LBL_Message}</strong></p>
                                <textarea rows="4"></textarea>
                            </div>
                            <div class="blockBtnWrapper">
                                <a role="button" class="block-btn-half btn-fill-custom addItem it-sendMessageModal">{!$Label.LBL_Send}</a>
                                <a role="button" class="block-btn-half btn-fill-light closeModal it-cancelMessageModal">{!$Label.BTN_Cancel}</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

	<script type="text/javascript" src="{!$Resource.CommunityResources}/js/underscore/underscore-min.js" ></script>
	<script type="text/javascript" src="{!$Resource.CommunityResources}/js/angularjs/angular.min.js" ></script>
	<script type="text/javascript" src="//code.angularjs.org/1.4.0/angular-sanitize.js"></script> 
	<script type="text/javascript">
		
		var PeoplesApp = angular.module('PeoplesApp', ['ngSanitize']);
		PeoplesApp.factory('getPeoples', ['$q', '$rootScope', function($q, $rootScope) {
			return function() {
				var deferred = $q.defer();
				if ($rootScope.getDataStatus != 'InProgress') {
					$rootScope.getDataStatus = 'InProgress';
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeed_PeopleController.getUnityPeoples}',
						'{!currentUsId}',
						function(result, event) {
							$rootScope.$apply(function() {
								if (event.status) {
									deferred.resolve(result);
									$rootScope.getDataStatus = 'Finished';
									jQuery("#profileFeedfollow").show();
								} else {
									deferred.reject(event);
									$rootScope.getDataStatus = 'Finished';
								}
							})
						},
						{ buffer: true, escape: true, timeout: 30000 }
					);
				} else {
					deferred = null;
					return null;
				}
				return deferred.promise;
			}
		}]);
		PeoplesApp.factory('subscriberAction', ['$q', '$rootScope', function($q, $rootScope) {
			return function(pId, isFollow) {
				var deferred = $q.defer();
				if ($rootScope.getDataStatus != 'InProgress') {
					$rootScope.getDataStatus = 'InProgress';
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeed_PeopleController.subscriberAction}',
						pId,
						isFollow,
						function(result, event) {
							$rootScope.$apply(function() {
								if (event.status) {
									deferred.resolve(result);
									$rootScope.getDataStatus = 'Finished';
									// eneble buttons
									jQuery('.follow').removeClass('disabled');
									jQuery('.follow').removeAttr('disabled');
								} else {
									deferred.reject(event);
									$rootScope.getDataStatus = 'Finished';
								}
							})
						},
						{ buffer: true, escape: true, timeout: 30000 }
					);
				} else {
					deferred = null;
					return null;
				}
				return deferred.promise;
			}
		}]);
		PeoplesApp.filter('startFrom', function() {
			return function(input, start) {
				start = +start;
				return input.slice(start);
			}
		});
		PeoplesApp.filter('quickSearch', function() {
			return function(input, scope) {
				var searchWords = scope.quickSearchQuery.match(/(\w|'){2,}/g);
				if (searchWords) {
					var reText = '';
					for (var i = 0; i < searchWords.length; i++) {
						reText += '(?=.*'+searchWords[i]+')';
					}
					var re = new RegExp(reText, "ig");
					var output = [];
					
					for (var j = 0; j < input.length; j++) {
						var mName = input[j].MemberName.replace(/&#39;/g,'\'');
						if (mName.match(re) != null) {
							output.push(input[j]);
						}
					}
					input = output;
				}
				scope.page.totalRecords = input.length;

				// fix for filter pagination 
				var round = input.length / (scope.page.pageSize * scope.page.currentPage);
				if(Math.round(round) < 0.5){
					var currPage = Math.ceil(input.length / scope.page.pageSize);
					scope.page.currentPage = currPage<1?1:currPage;
				}

				return input;
			}
		});
		PeoplesApp.filter('peopleFollowMe', function() {
			return function(input, scope) {
				var output = [];
				for (var j = 0; j < input.length; j++) {
					if (input[j].MemberIsFollowers) {
						output.push(input[j]);
					}
				}
				input = output;
				$('#h2followers').html('{!$Label.LBL_Followers} ('+input.length+')');
				if(!input.length){
					$('#viewAllFollowers').hide();
				}else{
					addCssToImage();
					$('#viewAllFollowers').show();
				}
				return input;
			}
		});
		PeoplesApp.filter('peopleIFollowing', function() {
			return function(input, scope) {
				var output = [];
				for (var j = 0; j < input.length; j++) {
					if (input[j].MemberIsFollowing) {
						output.push(input[j]);
					}
				}
				input = output;
				$('#h2following').html('{!$Label.BTN_Following} ('+input.length+')');
				if(!input.length){
					$('#viewAllFollowing').hide();
				}else{
					addCssToImage();
					$('#viewAllFollowing').show();
				}
				return input;
			}
		});

        PeoplesApp.filter('quickSort', function() {
            return function(input, scope) {
                var output = [];
                var sortItems = scope.sortItems.replace('[','').replace(']','').split(',');
                // sort section
                for(var i=0; i < sortItems.length; i++){
                	if(sortItems[i].trim() == scope.quickSortVal){
                		for (var j = 0; j < input.length; j++) {
	                        if (input[j].MemberRole == scope.quickSortVal) {
	                            output.push(input[j]);
	                        }
                    	}
                	}
                }
                if(!output.length && !scope.quickSortVal){
                	output = input;
                }
                input = output;
                scope.page.totalRecords = input.length;

                return input;
            }
        });

		PeoplesApp.controller('PeoplesController', ['$scope', '$filter' ,'getPeoples', 'subscriberAction', function($scope, $filter, getPeoples, subscriberAction) {
			$scope.quickSearchQuery = '';
            $scope.quickSortVal = '';
            $scope.sortItems = '{!profFS}';
			$scope.page = {
				pageSize: 6,
                pageFollowersSize: 18,
                currentPage: 1,
				totalRecords: 1,
				totalPages: function() {
					return Math.ceil($scope.page.totalRecords/$scope.page.pageSize);
				},
                hasMoreFollowers: function() {
                    return $scope.page.totalRecords > $scope.page.pageFollowersSize;
                },
               	changePageNumber : function () {
					if($scope.page.currentPage < 1) {
						$scope.page.currentPage = 1;
					} else if ($scope.page.currentPage > $scope.page.totalPages()) {
						$scope.page.currentPage = $scope.page.totalPages();
					}
				},
				nowOnPage: function() {
					return ($scope.page.currentPage*$scope.page.pageSize + $scope.page.pageSize < $scope.page.totalRecords)
						? $scope.page.currentPage*$scope.page.pageSize+$scope.page.pageSize 
						: $scope.page.totalRecords;
				},
				goToLast: function() {
					$scope.page.currentPage = $scope.page.totalPages(); 
				},
				goToFirst: function() {
					$scope.page.currentPage = 1;
				},
				goToPrev: function() {
					if ($scope.page.currentPage > 1) {
						$scope.page.currentPage = $scope.page.currentPage - 1;
					}
				},
				goToNext: function() {
					if ($scope.page.currentPage < $scope.page.totalPages()) {
						$scope.page.currentPage = $scope.page.currentPage + 1;
					}
				},
				startFrom: function() {
					return $scope.page.currentPage*$scope.page.pageSize-$scope.page.pageSize;
                },
                showMoreFollowers: function() {
                    $scope.page.pageFollowersSize +=  $scope.page.pageFollowersSize;
                    scope.updatePeopleScope();
                },
            
			};

            $scope.setActive = function(item){
                $scope.$apply(function(){
                    $scope.quickSortVal = item;
                });
            }

			$scope.followAction = function(p) {
				p.MemberIsFollowing = true;
				$scope.followUnfollow(p.MemberId, p.MemberIsFollowing);
                p.isSubscribeUser = !p.isSubscribeUser;
			}
			$scope.unFollowAction = function(p) {
				p.MemberIsFollowing = false;
				$scope.followUnfollow(p.MemberId, p.MemberIsFollowing);
                p.isSubscribeUser = !p.isSubscribeUser;
			}
			$scope.followUnfollow = function(pId, isFollow) {
				jQuery('.follow').attr('disabled','disabled');
				$('.follow').addClass('disabled')
				var def = subscriberAction(pId, isFollow);
				if (def != null) {
					$scope.inProgress = false;
					def.then(function(result) {
							if ($scope.inProgress == true) {
								$scope.followUnfollow();
							}
						},
						function(error){
							console.log(error);
						}
					);
				} else {
					$scope.inProgress = true;
				}
			};
			$scope.updatePeopleScope = function () {
				var def = getPeoples();
				if (def != null) {
					$scope.inProgress = false;
					def.then(function(result) {
							$scope.allPeople = result;
							$scope.page.currentPage = 1;
							$scope.page.totalRecords = result.length;
							if ($scope.inProgress == true) {
								$scope.updatePeopleScope();
							}
						},
						function(error){
							console.log(error);
							$scope.page.currentPage = 1;
						}
					);
				} else {
					$scope.inProgress = true;
				}
			};

            $scope.replaceCharacters = function(str){
	        	if(str){
	        		str = toHtml(str);
	   			}
				return str;
        	};

			$scope.updatePeopleScope();

			$scope.allPeople = [];
			window.scope = $scope;

            $(window).scroll(function() {
                if($(window).scrollTop() == $(document).height() - $(window).height()) {
                    if({!profileFollowers}) $scope.page.showMoreFollowers();
                    if({!profileFollowing}) $scope.page.showMoreFollowings();
                }
            });
            $('.selectpicker').on('change', function(){
                var selected = $(this).find("option:selected").val();
                $scope.setActive(selected);
            });
		}]);
	</script>
	<script>
        $('#profilefollowers').on('click', '.simpleModal', function() {
            $(this).parent().parent().hide();
        });

		function addCssToImage(){
			$('#profileFeedfollow .avatar-large img').css('width','77px').css('height','77px');
		}

        function dropmenu(elm){
            $(elm).next('ul').slideToggle();
        }

	</script>

</apex:component>