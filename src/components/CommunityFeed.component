<!--  
 * Unity - Communities
 * 
 * Community is critical to the student experience--but building community is 
 * just plain hard. Built on Communities and designed specifically for higher ed, 
 * Unity is a powerful networking tool to help you generate engagement and 
 * connect your campus.
 * 
 * Copyright (C) 2015 Motivis Learning Systems Inc.
 * 
 * This program is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 * 
 * To contact Motivis Learning Systems Inc.
 * 25 Pelham Road
 * Salem, NH 03790
 * unity@motivislearning.com
-->

<apex:component controller="CommunityFeedController">
	<apex:attribute name="pid" type="String" assignTo="{!parentId}" required="false" description="Parent Id" />
	<apex:attribute name="ft" type="String" assignTo="{!feedType}" required="false" description="Feed Type" />
	<apex:attribute name="ti" type="String" assignTo="{!topicId}" required="false" description="Topic Id" />
	<apex:attribute name="fe" type="Boolean" assignTo="{!fromEmail}" required="false" description="from email" />
	<apex:attribute name="ffe" type="String" assignTo="{!feedfromEmailId}" required="false" description="feed id from email" />
	<apex:attribute name="fm" type="Boolean" assignTo="{!fullMode}" required="false" default="true" description="Full Mode" />
	<apex:attribute name="fu" type="Boolean" assignTo="{!showFileUpload}" required="false" default="true" description="Show File Upload" />
	<apex:attribute name="sjcb" type="Boolean" required="false" default="false" description="show Join the Conversation button" />
	<apex:attribute name="tf" type="Boolean" required="false" default="false" description="show feeds from" />
	<apex:attribute name="gID" type="Boolean" assignTo="{!grID}" required="false" default="false" description="ID for Group" />
	<apex:attribute name="he" type="Boolean" assignTo="{!hideEventBtn}" required="false" default="false" description="hide create event button" />
	<script src="{!$Resource.CommunityResources}/js/underscore/underscore-min.js"></script>
	<script type="text/javascript" src="{!$Resource.assets}/plugins/mentions/jquery.mentionsInput.js" ></script>
	<script type="text/javascript" src="{!$Resource.assets}/plugins/mentions/jquery.events.input.js" ></script>
	<script type="text/javascript" src="{!$Resource.assets}/plugins/sky-forms/version-2.0.1/js/jquery-ui.min.js"></script>
	<script type="text/javascript" src="{!$Resource.assets}/plugins/sky-forms/version-2.0.1/js/jquery.validate.min.js"></script> <!--  path contains old version -->
	<script type="text/javascript" src="/soap/ajax/33.0/connection.js"></script>
	<script type="text/javascript" src="{!$Resource.assets}/plugins/ImageLoad/load-image.all.min.js"></script>

	<apex:stylesheet value="{!$Resource.assets}/plugins/datetimepicker/jquery.datetimepicker.css" />
	<script type="text/javascript" src="{!$Resource.assets}/plugins/datetimepicker/jquery.datetimepicker.js"></script>
	<!-- script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.13.1/jquery.validate.min.js"></script-->
	<div class="CommunityFeed">
		<apex:outputPanel rendered = "{!fromEmail}">
		<div class="preloader__container">
			<div class="preloader__element">
				<i class="fa fa-refresh fa-spin preloader__icon"></i>
			</div>
		</div>
		</apex:outputPanel>
		<apex:outputPanel id="simple" layout="block" styleClass="row" rendered="{!!fullMode}" style="display:none;">
			<div id="cfcmp" class="col-sm-12 profile margin-bottom-20">
				<div class="panel panel-profile">
					<div id="scrollbar4" class="panel-body contentHolder ps-container"></div>
				</div>	
			</div>
			<apex:outputPanel layout="block" styleClass="col-sm-12" rendered="{!sjcb}">
				<button class="btn-u btn-u-blue" onclick="window.open('{!$Page.CommunityFeed_MyFeed}','_self');" type="button"><i class="fa fa-comment-o"></i> Join the conversation</button> 
			</apex:outputPanel>
			<script>
				$(document).ready(function() {
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.feeds}',
						'{!JSENCODE(parentId)}',
						'{!feedType}',
						'',
						function(result, event) {
							if (event.status) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#tto').html());
								var tt = jsonObj(result);
								$('#scrollbar4').append(template(tt));
								$('[id$=simple]').fadeIn();
							}
						}
					);
				});
			</script>
			<script id="tto" type="text/template">
				<% _.each(rc.elements, function(p){ %>
				<div class="comment media-body">
					<img src="<%- p.actor.photo.smallPhotoUrl %>" alt="<%- p.actor.displayName %>"/>
					<div class="overflow-h" onclick="window.location.href = '<%- p.parentLink !== null ? ''+p.parentLink : (p.parentId == '{!$User.Id}' ? '{!IF(isUnityTemplate,$Page.UnityHome,$Page.CommunityFeed_MyFeed)}' : '{!IF(isUnityTemplate,$Page.UnityProfilePage,$Page.CommunityProfilePage)}?id='+p.parentId+'&f=2') %>';">
						<div class="profilename"><strong><a href="<%- p.actor.id == '{!$User.Id}' ? '{!IF(isUnityTemplate,$Page.UnityHome,$Page.CommunityFeed_MyFeed)}' : '{!IF(isUnityTemplate,$Page.UnityProfilePage,$Page.CommunityProfilePage)}?id='+p.actor.id+'&f=2' %>" alt="<%- p.actor.displayName %>"><%- p.actor.displayName %> <%- p.actor.role !== null ?  '(' + p.actor.role + ')': '' %> <small class="pull-right"><%- p.dateStr %></small></a></strong></div>
						<% if(p.parentType != null && {!tf}){ %>
							<p><strong><a class="<%- p.parentIcon %> font-weight-bold" href="<%- p.parentLink %>"> <%- p.parentType %> - <%- p.parentName %> <% if(p.parentAcssesType != null){ %> (<%- p.parentAcssesType %>) <% } %></a>
							</strong></p>
						<% } %>	 
						<p><% 	var pp = parseFeedBody(p.body,p.topicsUser);
								print(wrapnl(pp)); %>
						</p>

						<% if (p.showLink) { %>
						<div class="d-link">
						<a href="<%- p.linkHref %>" target="_blank" >
							<i class="fa fa-link"></i>
							<%- p.linkName %><br>
						</a>
						<% print(wrapnl(p.linkHref)); %>
						</div>
						<% } %>

						<ul class="list-inline comment-list">
							<li><i class="fa fa-comments"></i> <a href="#"><%- p.total %></a></li>
						</ul>
					</div>	
				</div>
				<% }); %>
			</script>
		</apex:outputPanel>
		<apex:outputPanel layout="block" styleClass="panel panel-profile" rendered="{!fullMode}">
			<div>
				<ul id="palist" class="list-inline pull-left">
					<apex:repeat value="{!AvailableActions}" var="aa">
						<li>
							<a href="javascript:;" title="{!aa.label}" id="{!aa.name}" onclick="setActiveli(this);" class="{!IF(aa.name == 'FeedItem.TextPost','curr','')}" name="{!aa.icon}"><i class="expand-list rounded-x fa {!aa.icon}"></i></a>
						</li>
					</apex:repeat>
				</ul>
				<div class="clearfix"></div>
				<div id="postform-error" class="alert alert-danger fade in" style="display:none;"></div>
				<div id="postarea">
					<form name="postform">
						<div class="sky-form bordered margin-bottom-5">
							<textarea name="message" id="message" class="form-control share" onclick="checkmi(this);"></textarea>
						</div>
						<div class="text-right">
							<button type="button" class="btn-u" id="mesbtn">
								<i class="fa fa-spinner fa-pulse" style="display:none;"></i>
								<span>{!$Label.LBL_Share}</span>
							</button>
						</div>
					</form>
				</div>
			</div>
			<div id="cfcmp" class="panel panel-profile"></div>
			<button id="shmbtn" type="button" class="btn-u btn-u-default btn-block" style="display:none;">
				<i class="fa fa-spinner fa-pulse" style="display:none;"></i>
				<span>{!$Label.LBL_Load_More}</span>
			</button>
					<!-- modal section for edit post-->	
			<div class="modal fade" tabindex="-1" role="dialog" id="editPanel" data-backdrop="static">
				<div class="modal-dialog">
					<div class="modal-content">
			    		<div class="modal-header">
				        	<button type="button" class="close" onclick="closeEditDialog();return false;" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				        	<h4 class="modal-title">{!$Label.BTN_Edit}</h4>
				      	</div>
				     	<div id="modalDialog" class="modal-body">
						    <form name="editform">
								<div class="sky-form bordered margin-bottom-5">
									<textarea name="message" id="message" class="form-control share" onclick="checkmi(this);"></textarea>
								</div>
							</form>
				      	</div>
				    </div><!-- /.modal-content -->
				</div><!-- /.modal-dialog -->
			</div><!-- /.modal -->
			<script id="ttp1" type="text/template">
				<% if(viewFromEmail && rc.elements == null) {%>
					<p><a class="font-weight-bold" href="<%- rc %>">{!$Label.LBL_All_Updates}</a> ) {!$Label.LBL_This_Update}</p>
					<p>{!$Label.LBL_There_Are_No_Updates}<p>
				<% } %>	
				<% _.each(rc.elements, function(p2){ %>
					<% if(viewFromEmail) {%>
						<% if(p2.parentType) {%>
							<span class="pull-right">
								<p class="font-weight-bold"><strong><%- p2.parentType %> / <%- p2.parentName %></strong></p>
							</span>
						<% } %>
						<% if(p2.parentLink){%>
							<p><a class="font-weight-bold" href="<%- p2.parentLink %>">{!$Label.LBL_All_Updates}</a> ) {!$Label.LBL_This_Update} </p>
						<% }else if(p2.parentId == "{!currentUserId}"){%>
							<p><a class="font-weight-bold" href="{!$Page.CommunityFeed_MyFeed}">{!$Label.LBL_All_Updates}</a> ) {!$Label.LBL_This_Update}</p>
						<% }else {%>
							<p><a class="font-weight-bold" href="{!IF(isUnityTemplate,$Page.UnityProfilePage,$Page.CommunityProfilePage)}?id=<%- p2.parentId %>&f=2">{!$Label.LBL_All_Updates}</a> ) {!$Label.LBL_This_Update}</p>
						<%}%>
					<% } %>	
				<div class="media media-v2" id="m<%- p2.id %>">
					<a class="pull-left" href="{!IF(isUnityTemplate,$Page.UnityProfilePage,$Page.CommunityProfilePage)}?id=<%- p2.actor.id %>">
						<img class="media-object rounded-x" src="<%- p2.actor.photo.smallPhotoUrl %>" alt=""/>
					</a>
					<div class="media-body">
						<h4 class="media-heading">
							<strong><a href="{!IF(isUnityTemplate,$Page.UnityProfilePage,$Page.CommunityProfilePage)}?id=<%- p2.actor.id %>"><%- p2.actor.displayName %> <%- p2.actor.role !== null ?  '(' + p2.actor.role + ')': '' %></a></strong>
							<% if(p2.capabilities.edit.editedDate) {%>
								<small><a href="javascript:void(0);">{!$Label.LBL_Edited} <span><%- p2.capabilities.edit.editedDate %></span></a></small>
							<% }else{ %>
							<small><%- p2.dateStr %></small>
							<% } %>
						</h4>
						<% if(p2.parentType != null && {!tf}){ %>
							<p><strong><a class="<%- p2.parentIcon %> font-weight-bold" href="<%- p2.parentLink %>"> <%- p2.parentType %> - <%- p2.parentName %> <% if(p2.parentAcssesType != null){ %> (<%- p2.parentAcssesType %>) <% } %></a>
							</strong></p>
						<% } %>	
						<% if (!p2.showLink && !p2.showContent && !p2.capabilities.poll) { %>
							<p>	<% var p2p = parseFeedBody(p2.body,p2.topicsUser);
								print(wrapnl(p2p)); %>
							</p>
						<%}%>
						<% if (p2.showLink) { %>
							<p>	<% var p2p = parseFeedBody(p2.body,p2.topicsUser);
								print(wrapnl(p2p)); %>
							</p> 
						<div class="d-link">
						<a href="<%- p2.linkHref %>" target="_blank" >
							<i class="fa fa-link"></i>
							<%- p2.linkName %><br>
						</a>
						<% print(wrapnl(p2.linkHref)); %>
						</div>
							</p>
						<% } %>
						<% if (p2.showContent) { %>
							<p>	<% var p2p = parseFeedBody(p2.body,p2.topicsUser);
								print(wrapnl(p2p)); %>
							</p>
								<% if (p2.capabilities.content.fileExtension) { %>
						<% if(['png', 'gif', 'jpg', 'jpeg'].indexOf(p2.capabilities.content.fileExtension) < 0 ) {%>
							<div class="row">
								<div class="col-md-12">
									<div class="pull-left">
										<div class="image-link__container--pdf">
									<a href="javascript: void(0);" target="_self">
												<img src="<%- p2.capabilities.content.renditionUrl %>" alt="" class="img-responsive" onerror="this.style.visibility = 'hidden'"/>
									</a>
										</div>
									</div>
									<div class="pull-left">
										<div class="download-links__container">
											<div class="download-links__file__container--pdf">
												<a href="{!$Page.CommunityGroupFiles}?f=<%- p2.capabilities.content.id %>&fi=<%- p2.id %>" target="_self">
												<i class="fa fa-file"></i>
													<%- p2.capabilities.content.title %>
												</a>
											</div>
											<div class="download-links__file-size__container">
												<a href="<%- p2.capabilities.content.downloadUrl %>" target="_blank">
													<i class="fa fa-download"></i>
													<span>
														Download <%- p2.capabilities.content.fileExtension %>
													</span> 
													<span>
														(<%- fileSizeIEC(p2.capabilities.content.fileSize) %>)
													</span>
												</a>
											</div>
										</div>
									</div>
								</div>
							</div>
						<%} else {%>
							<div class="row">
								<div class="col-md-12">
									<div class="image-link__container">
										<a href="javascript: void(0);" target="_self">
											<img src="<%- p2.capabilities.content.downloadUrl %>" alt="" class="img-responsive max-height-500" onerror="this.style.visibility = 'hidden'"/>
										</a>
									</div>
									<div class="download-links__container">
										<div class="pull-left download-links__file__container">
											<a href="{!$Page.CommunityGroupFiles}?f=<%- p2.capabilities.content.id %>&fi=<%- p2.id %>" target="_self">
											<i class="fa fa-file"></i>
												<%- p2.capabilities.content.title %>
											</a>
										</div>
										<div class="pull-left download-links__file-size__container">
											<a href="<%- p2.capabilities.content.downloadUrl %>" target="_blank">
												<i class="fa fa-download"></i>
												<span>
													Download <%- p2.capabilities.content.fileExtension %>
												</span> 
												<span>
													(<%- fileSizeIEC(p2.capabilities.content.fileSize) %>)
												</span>
											</a>
										</div>
									</div>
								</div>
							</div>
						<%} %>
								<% } else { %>
									<p>
										<i class="fa fa-file-o"></i> The file is no longer available.
									</p>
								<% } %>
				<% } %>

						<% if (p2.capabilities.poll && p2.capabilities.poll.choices) { %>					
							<p>	<% var p2p = parseFeedBody(p2.body,p2.topicsUser);
								print(wrapnl(p2p)); %>
							</p>
							<fieldset class="pollfieldset">
								<ul class="pollchoices">
									<% _.each(p2.capabilities.poll.choices, function(choice) { %>
											<% if ((p2.capabilities.poll.myChoiceId && !changeVoteId(p2.id)) || viewRes(p2.id)) {%>
												<li>
													<label class="input" for="<%-choice.id%>"></label>
													<h3 class="heading-xs"><% print(wrapnl(choice.text)) %> <span class="pull-right"><%-choice.voteCount%> (<%-Math.round(choice.voteCountRatio*100)%>%)</span></h3>
													<div class="progress progress-u progress-sm">
														<div class="progress-bar progress-bar-u" role="progressbar" aria-valuenow="<%-choice.voteCountRatio*100%>" aria-valuemin="0" aria-valuemax="100" style="width: <%-choice.voteCountRatio*100%>%;">
														</div>

													</div>
												</li>

											<% } else { %>
												<li class="pollchoice">
													<div>
													<input type="radio" id="<%-choice.id%>" name="pollchoicesgroup__<%-p2.id%>" onchange="enableBtn('vote_<%- p2.id %>')"/>
													<label class="input" for="<%-choice.id%>"><% print(wrapnl(choice.text))%></label>
													</div>
												</li>
											<%}%>
									<% }); %>
								</ul>
								<% if ((!p2.capabilities.poll.myChoiceId || (changeVoteId(p2.id) )) && !viewRes(p2.id)) {%>
									<input class="btn-u" type="button" value="Vote" title="Vote" onclick="vote(this);" id="vote_<%- p2.id %>" disabled="disabled">
								<%}%>
								<span class="pollvotecount"><%-p2.capabilities.poll.totalVoteCount%> votes</span>
								<% if ((p2.capabilities.poll.myChoiceId && !changeVoteId(p2.id)) || (viewRes(p2.id) && p2.capabilities.poll.myChoiceId)) { %>
									&bull;  <a href="javascript: void(0);"> <span onclick="refreshFeed();">{!$label.LBL_Refresh}</span></a>
									&bull;  <a href="javascript: void(0);">	<span onclick="changeVote('<%- p2.id %>');">{!$label.LBL_Change_Vote}</span></a>
								<%}%>
								<% if ((!p2.capabilities.poll.myChoiceId || changeVoteId(p2.id)) && !viewRes(p2.id)) {%>
									&bull;  <a href="javascript: void(0);"> <span onclick="viewResults('<%- p2.id %>');">{!$label.LBL_View_Results}</span></a>
								<%}%>
								<% if (!p2.capabilities.poll.myChoiceId && viewRes(p2.id)) {%>
									&bull;  <a href="javascript: void(0);"> <span onclick="refreshFeed();">{!$label.LBL_Refresh}</span></a>
									&bull;  <a href="javascript: void(0);"> <span onclick="viewResults('<%- p2.id %>');">{!$label.LBL_Vote}</span></a>
								<%}%>	
								
							</fieldset>
						<%} %>
						<% 
						if (!_.isEmpty(p2.topicsUser) && wraptop(p2.topicsUser) != "") {%>
							<br /><p id="topiclabel<%- p2.id %>"><a href="{!$Page.CommunityTopic}" id="topLabel">{!$Label.LBL_Topic}</a> :
							 	<% var p2t = wraptop(p2.topicsUser);
							 	print(wrapnl(p2t)); 
							 	%>
							 </p>
						<% } %>  
						<ul class="list-inline results-list pull-left">
							<li><a href="javascript:void(0);"><span><%- p2.countLikes %></span> Likes</a></li>
						</ul>
						<ul class="list-inline pull-right margin-top-5" id="ul<%- p2.id %>">
							<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_Feed_Reply}><i onclick="focusComment('<%- p2.id %>');" class="expand-list rounded-x fa fa-reply"></i></a></li>
							<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_Feed_Like}><i onclick="inlAct('<%- p2.id %>','fa-thumbs-up','<%- p2.likeId %>');" class="expand-list rounded-x fa fa-thumbs-up<%- p2.likeStyle %>"></i></a></li>
							<% if ( (p2.showFlag)&&chekFlagOnPage(p2.parentType) ) { %>
							<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_Feed_Flag}><i onclick="inlAct('<%- p2.id %>','fa-flag','<%- p2.flagStatus %>');" class="expand-list rounded-x fa fa-flag<%- p2.flagStyle %>"></i></a></li>
							<% } %>
							<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_Feed_Bookmark}><i onclick="inlAct('<%- p2.id %>','fa-bookmark','<%- p2.bookmarkStatus %>');" class="expand-list rounded-x fa fa-bookmark<%- p2.bookmarkStyle %>"></i></a></li>
							<% if (!p2.showLink && !p2.showContent && !p2.capabilities.poll && !p2.capabilities.edit.isEditRestricted){ %>
								<li><a href="javascript:void(0);" title={!$Label.BTN_Edit}><i onclick="editPost('<%- p2.id %>');" class="expand-list rounded-x fa fa-edit"></i></a></li>
							<% } %>
							<% if(p2.capabilities.mute != null && {!isMuteShow}){ %>
								<% if({!muteShowTooltip}){%>
									<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_MuteFeed}><i onclick="muteFeed('<%- p2.id %>', '<%- p2.capabilities.mute.isMutedByMe %>');" class="expand-list rounded-x fa fa-minus"></i></a></li>
								<% } %>
								<% if({!!muteShowTooltip}){%>
									<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_Unmute_Feed}><i onclick="muteFeed('<%- p2.id %>', '<%- p2.capabilities.mute.isMutedByMe %>');" class="expand-list rounded-x fa fa-minus"></i></a></li>
								<% } %>
							<% } %>
							<% if (p2.isDeleteRestricted) { %>
							<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_Feed_Delete}><i onclick="inlAct('<%- p2.id %>','fa-times','');" class="expand-list rounded-x fa fa-times"></i></a></li>
							<% } %>
						</ul>
						<div class="clearfix"></div>
						<% if (p2.showComments) { %>
						<% if (p2.capabilities.comments.page.showNextComments) { %>
							<a id="l<%- p2.id %>" href="javascript:void(0);" onclick="getComments('<%- p2.id %>', '<%- p2.capabilities.comments.page.nextPageToken%>');">Show More Comments</a>
						<% } %>
						<div class="media media-v2" id="c<%- p2.id %>" name="<%- p2.id %>">
							<% _.each(p2.capabilities.comments.page.items, function(c2){ %>
			</script>
			<script id="ttp21" type="text/template">
							<% _.each(rc.items, function(c2){ %>
			</script>
			<script id="ttp2" type="text/template">
								<span id="m<%- c2.id %>">
								<a class="pull-left" href="{!IF(isUnityTemplate,$Page.UnityProfilePage,$Page.CommunityProfilePage)}?id=<%- c2.user.id %>">
									<img class="media-object rounded-x" src="<%- c2.user.photo.smallPhotoUrl %>" alt=""/>
								</a>
								<div class="media-body">
									<h4 class="media-heading">
										<strong><a href="{!IF(isUnityTemplate,$Page.UnityProfilePage,$Page.CommunityProfilePage)}?id=<%- c2.user.id %>"><%- c2.user.displayName %> <%- c2.user.role !== null ?  '(' + c2.user.role + ')': '' %></a></strong>
										<% if(c2.capabilities.edit.editedDate) {%>
											<small><a href="javascript:void(0);">{!$Label.LBL_Edited} <span><%- c2.capabilities.edit.editedDate %></span></a></small>
										<% }else{ %>
										<small><%- c2.dateStr %></small>
										<% } %>
									</h4>
									<p>	<% var p2p = parseFeedBody(c2.body,c2.topicsUser);
										print(wrapnl(p2p)); %>
									</p> 
									<ul class="list-inline results-list pull-left">
										<li><a href="#"><span><%- c2.countLikes %></span> Likes</a></li>
									</ul>
									<ul class="list-inline pull-right" id="ul<%- c2.id %>">
										<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_Feed_Like}><i onclick="inlAct('<%- c2.id %>','fa-thumbs-up','<%- c2.likeId %>');" class="expand-list rounded-x fa fa-thumbs-up<%- c2.likeStyle %>"></i></a></li>
										<% if ( (c2.showFlag)&&chekFlagOnPage(c2.parentType) ) { %>
										<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_Feed_Flag}><i onclick="inlAct('<%- c2.id %>','fa-flag','<%- c2.flagStatus %>');" class="expand-list rounded-x fa fa-flag<%- c2.flagStyle %>"></i></a></li>
										<% } %>
										<% if(!c2.capabilities.edit.isEditRestricted){ %>
										<li><a href="javascript:void(0);" title={!$Label.BTN_Edit}><i onclick="editComment('<%- c2.id %>');" class="expand-list rounded-x fa fa-edit"></i></a></li>
										<% } %>
										<% if (c2.isDeleteRestricted) { %>
										<li><a href="javascript:void(0);" data-toggle="tooltip" title={!$Label.LBL_Feed_Delete}><i onclick="inlAct('<%- c2.id %>','fa-times','');" class="expand-list rounded-x fa fa-times"></i></a></li>
										<% } %>
									</ul>
								</div>
								<div class="d-comment"></div>
								</span>
							<% }); %>
			</script>
			<script id="ttp3" type="text/template">
						<% } else { %>
						<div class="media media-v2" id="c<%- p2.id %>" name="<%- p2.id %>" style="display:none;">
						<% } %>
							<div id="d<%- p2.id %>" class="margin-bottom-10"></div>
							<span id="s<%- p2.id %>">
								<a class="pull-left" href="javascript:void(0);">
									<img class="media-object rounded-x" src="{!currentUserPhoto}" alt=""/>
								</a>
								<div class="media-body">
									<textarea id="a<%- p2.id %>" class="form-control margin-bottom-5" onclick="checkmi(this);" onkeyup="checkbtn(this,'#b<%- p2.id %>');"></textarea>
									<ul class="list-inline pull-right">
										<button type="button" class="btn-u opacity-75" id="b<%- p2.id %>" onclick="postComment($('#a<%- p2.id %>').val(),'<%- p2.id %>', '<%-p2.topicsUser.length%>');" disabled="disabled">
											<i class="fa fa-spinner fa-pulse" style="display:none;"></i>
											<span>Comment</span>
										</button>
									</ul>
							</div>
							</span>
						</div>
						
					</div>
				</div>
				<% }); %>
			</script>
			<script id="atp" type="text/template">
				<form name="postform">

				<div class="sky-form bordered margin-bottom-5">
				<% if (rc.beforeFields || !rc.post) { %>
					<div class="sky-div-margin">
				<% } %>
				<% _.each(rc.items, function(ii){ %>
					<% if (ii.ftype == "post") { %>
						<% if (rc.beforeFields) { %>
					</div>
						<% } %>
						<textarea id="<%- ii.fieldName %>" name="<%- ii.fieldName %>" class="form-control tagged_text share <%- ii.validationClass %>" onFocus="checkmi(this);"  onclick="checkmi(this);" placeholder="<%- ii.placeholder %>"></textarea>
						<% if (rc.afterFields) { %>
					<div class="sky-div-margin">
						<% } %>
					<% } else {%>
						<section>
							<label class="label input"><%= ii.label %></label>
							<% if (ii.ftype == "textarea") { %>
							<label class="textarea input">
								<textarea id="<%- ii.fieldName %>" name="<%- ii.fieldName %>" class="form-control <%- ii.validationClass %>"<%- ii.requiredAttr %> > </textarea>
							</label>
							<% } else if (ii.ftype == "inputfile"){%>
							<label for="file" class="input input-file">
								<div class="button"><input type="file" id="<%- ii.fieldName %>" name="<%- ii.fieldName %>" onchange="inputFileOnchange(this);" <%- ii.requiredAttr %>>Browse</div><input type="text" readonly="">
							</label>
							<% } else {%>
							<label class="input">
								<input id="<%- ii.fieldName %>" name="<%- ii.fieldName %>" type="<%- ii.inputtype %>" <%- ii.requiredAttr %> class="form-control <%- ii.validationClass %>" />
							</label>
							<% } %>
						</section>
					<% } %>
				<% }); %>
				<% if (rc.name == "FeedItem.PollPost") { %>
					<a href="javascript: void(0);" title="Add more choices" id="polladdchoice" onclick="addPollChoiceInputElement(this);">
						Add more choices
					</a>
				<% } %>
				<% if (rc.afterFields) { %>
					</div>
				<% } %>
				</div>
				<% if (rc.post) { %>
				<div class="text-right">
					<button type="submit" value="submit" class="submit btn-u" id="mesbtn" onclick="initTextareaBTN(this);postAction($('#message').val());return false;" >
						<i class="fa fa-spinner fa-pulse" style="display:none;"></i>
						<span><%- rc.btntxt %></span>
					</button>
				</div>
				<% } else { %>
				</div>
				<div class="text-right">
					<button type="button" class="btn-u" id="mesbtn" onclick="postAction(''); return false;">
						<i class="fa fa-spinner fa-pulse" style="display:none;"></i>
						<span><%- rc.btntxt %></span>
					</button>
				</div>
				<% } %>
				</form>
			</script>

			<script id="etp" type="text/template">
				<div id="postarea">
				<form name="editform" class="edit-form" novalidate="novalidate">
					<div class="sky-form bordered margin-bottom-5">
						<div class="sky-div-margin">
                    	<% if(rc.elements){ 
                    		_.each(rc.elements, function(editel){%>
							</div>
								<textarea id="message" name="message" class="form-control tagged_text share validate-textarea" onFocus="checkmi(this);"  onclick="checkmi(this);"><%print(wrapnl(parseFeedBodyEdit(editel.body))); 
										parseBody(editel.body,editel.topicsUser);
									%>
								</textarea>
							<%}); 
                    	}else{
                    		_.each(rc.items, function(editel){%>
							</div>
								<textarea id="message" name="message" class="form-control tagged_text share validate-textarea" onFocus="checkmi(this);"  onclick="checkmi(this);"><%print(wrapnl(parseFeedBodyEdit(editel.body))); 
										parseBody(editel.body,editel.topicsUser);
									%>
								</textarea>
							<%}); 
                    	}%>
	                </div>
	                <div class="text-right">
	                	<button id="svbtn" class="btn-u margin-right-5" type="button" onclick="initTextareaBTN(this);updateAction($('#editPanel #message').val());return false;">
	                		<i class="fa fa-spinner fa-pulse" style="display:none;"></i>
							<span>{!$Label.BTN_Save}</span>
						</button>
				    	<button id="cnlbtn" class="btn-u btn-u-default margin-right-5" type="button" onclick="closeEditDialog();return false;">
				    		<span>{!$Label.BTN_Cancel}</span>
						</button>
						
					</div>
                </form>
                </div>
            </script>

			<script>
				function showFeedError(msg) {
					//$('#postform-error').text(msg).show();
					alert(_.unescape(msg));
				}
				function hideFeedError() {
					//$('#postform-error').hide();
				}
				
		 		function inputFileOnchange(elm) {
						if (elm.files.length>0) elm.parentNode.nextSibling.value = elm.files[0].name;
						else elm.parentNode.nextSibling.value = '';
					}
				var chekFlagOnPage = function(type){
					if(!(_.contains(['News','Events','Manager','Resources'], type)) ) {
						listPages = ['CommunityNewsDetail', 'CommunityEventDetail', 'CommunityGroupManager', 'communityresourcedetail'];
						_.each(listPages, function(value, key, obj){ obj[key] = '{!packagePrefix}'+ value.toLowerCase(); });
						return !(_.contains(listPages, '{!$CurrentPage.Name}'.toLowerCase()));
					}
					else return false;
				}
				var changeVoteIds = [];
				var viewResultsArray = [];
				var viewFromEmail = {!fromEmail} && '{!feedfromEmailId}'.length > 0 ? true : false;
				//Global variables for edit post dialog
				var idForEditPost = '';
				var idForEditComment = '';
				var bodyObjects = [];
				var editMessageText = '';
				var countTopicsEdit = 0;
				var namesTopicsEdit = [];
				var chatactionForEdit;
				
				$(document).ready(function() {
					var top = '{!topicId}';
					if(viewFromEmail){
						loadFeedFromEmail(null);
						$(".nav-tabs").hide();
						$('#palist').hide();
						$('#postarea').hide();
					}else if(top){
						loadFeedsForTopic(null);
						if({!!isTopicAssignmentCreateable}){
							$('#palist').hide();
							$('#postarea').hide();
						}
					}else{
						loadFeeds(null);
					}
				});

				function loadFeeds(inpt) {
					$('a.curr i.fa-comment').removeClass('fa-comment').addClass('fa-spinner fa-pulse');
					disableBtn('shmbtn',true);
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.feeds}',
						'{!JSENCODE(parentId)}',
						'{!feedType}',
						inpt,
						function(result, event) {
							if (event.result) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#ttp1').html() + $('#ttp2').html() + $('#ttp3').html());
								var tt = jsonObj(result);
								$('#cfcmp').append(template(tt));
								enableBtn('shmbtn');
								$('#shmbtn').css('display',tt.showMore?'block':'none').attr('onclick','loadFeeds(\'' + tt.nextPageToken + '\');return false;');
								if({!fromEmail}){
									$('.preloader__container').hide();
								}	
							}
							else {
								showFeedError(event.message);
							}
							$('a.curr i.fa-spinner').removeClass('fa-spinner fa-pulse').addClass('fa-comment');
						}
					);
					initValidator();
				}

				function loadFeedsForTopic(inpt) {
					$('a.curr i.fa-comment').removeClass('fa-comment').addClass('fa-spinner fa-pulse');
					disableBtn('shmbtn',true);
					var params = {'parentId' : '{!JSENCODE(parentId)}',
								'feedType' 	 : '{!feedType}',
								'inpt'		 : inpt,
								'topicId' 	 : '{!JSENCODE(topicId)}'};
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.feedsForTopics}',
						params,
						function(result, event) {
							if (event.result) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#ttp1').html() + $('#ttp2').html() + $('#ttp3').html());
								var tt = jsonObj(result);
								$('#cfcmp').append(template(tt));
								enableBtn('shmbtn');
								$('#shmbtn').css('display',tt.showMore?'block':'none').attr('onclick','loadFeedsForTopic(\'' + tt.nextPageToken + '\');return false;');
							}
							else {
								showFeedError(event.message);
							}
							$('a.curr i.fa-spinner').removeClass('fa-spinner fa-pulse').addClass('fa-comment');
						}
					);
					initValidator();
				}

				function loadFeedFromEmail(inpt) {
					disableBtn('shmbtn',true);
					var params = {'parentId' : '{!JSENCODE(parentId)}', 
								'feedType' 	 : '{!feedType}',
								'inpt'		 : inpt, 
								'feedId' 	 : '{!JSENCODE(feedfromEmailId)}'};
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.feedFromEmail}',
						params,
						function(result, event) {
							if (event.result) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#ttp1').html() + $('#ttp2').html() + $('#ttp3').html());
								var tt = jsonObj(result);
								$('#cfcmp').append(template(tt));
								enableBtn('shmbtn');
								$('#shmbtn').css('display',tt.showMore?'block':'none').attr('onclick','loadFeedsForTopic(\'' + tt.nextPageToken + '\');return false;');
								$('.preloader__container').hide();
							}else{
								showFeedError(event.message);
								$('.preloader__container').hide();
							}
						}
					);
					initValidator();
				}


				function postFeed(text) {
					disableBtn('mesbtn');
					var params = {'parentId' : '{!JSENCODE(parentId)}', 
								'inText' 	 : text, 
								'topicId' 	 : '{!JSENCODE(topicId)}'};

					if($("form[name='postform']").data('validator').checkForm()) {
						$('#message').mentionsInput('val', function(text) {
							Visualforce.remoting.Manager.invokeAction(
								'{!$RemoteAction.CommunityFeedController.postFeeds}',
								params,
								function(result, event) {
									if (event.result) {
										_.templateSettings.variable = 'rc';
										var template = _.template($('#ttp1').html() + $('#ttp2').html() + $('#ttp3').html());
										var tt = jsonObj(result);
										$('#cfcmp').prepend(template(tt));
										$('#message').val('');
									}
									else {
										showFeedError(event.message);
									}
									enableBtn('mesbtn');
								}
							);
						});
					}
					else {
						$("form[name='postform']").data('validator').showErrors(); 
						enableBtn('mesbtn');
					}
				}
					
				uploadAttachment = function(binary,fName,fType) {
					// send attacment
					var __sfdcSessionId = '{!GETSESSIONID()}';
					if('{!JSENCODE(parentIdForAtt)}'.length == 0) {
							enableBtn('mesbtn');
							showFeedError('{!JSINHTMLENCODE($Label.ERR_Set_Up_Community_Profile)}');
							return null;
						}
						sforce.connection.serverUrl = '{!$Site.Prefix}/services/Soap/u/33.0';
						sforce.connection.sessionId = __sfdcSessionId;
						var Attachment = new sforce.SObject('Attachment');
						Attachment.Name = fName;
						Attachment.ContentType = fType;
						Attachment.Body  = binary;
						Attachment.ParentId = '{!JSENCODE(parentIdForAtt)}';
						sforce.connection.create([Attachment],
						{
							onSuccess : function(result, source) {
								if (result[0].getBoolean("success")) {
								if($("[name='message']").val()) {
										$('#message').mentionsInput('val', function(text) {
											chataction.layout.items[messageItemIndex].value = text;
											insertAttIntoFeed(result[0].id, JSON.stringify(chataction.layout));
										});
									}
									else {
										insertAttIntoFeed(result[0].id, null);
									}
								}
								else {
									enableBtn('mesbtn');
									showFeedError(result[0].errors.message);
								}
							},
							onFailure : function(error, source) {
								enableBtn('mesbtn');
								showFeedError(result[0].errors.message);
							}
					});
					// end sending
				}

				function postAction(text) {
					if( checkTopicsCount(text) == -1 ) return ;
					hideFeedError();
					disableBtn('mesbtn');
					var messageItemIndex = -1;
					var fBaseStr = null;
					var fType = null;
					var fName = null;
					var sendFile = false;
					if($("form[name='postform']").data('validator').checkForm()) {
						_.each(chataction.layout.items, function(item) {
							if(item.fieldName == 'message') {
								messageItemIndex = chataction.layout.items.indexOf(item);
							}
							if(item.ftype == 'inputfile') {
								sendFile = true;
								var inputfile = $("[name='" + item.fieldName + "']")[0].files[0];
								if(inputfile != undefined) {
									fType = inputfile.type;
									fName = inputfile.name;
									if(inputfile.size>26214400) {
										enableBtn('mesbtn');
								 		showFeedError('{!JSINHTMLENCODE($Label.LBL_File_Upload_Size_Limit)}');  // change - need label
								 		return null;
									}
									// my code
									if(fType.indexOf("image/")>-1) {
										var options = {
											maxWidth: 1000,
											maxHeight: 1000,
											canvas: true
										};
										loadImage.parseMetaData(inputfile, function (data) {
											if(data.exif) {
												// get orientation from image if it is
												options.orientation = data.exif.get('Orientation');
											}
											loadImage( inputfile,
												function (img) {
													if(img.type != 'error'){ 
													var binary = img.toDataURL(fType).substring(img.toDataURL(fType).indexOf("base64,")+"base64,".length);
													uploadAttachment(binary,fName,fType);
													}else{
														var reader = new FileReader();
														reader.onloadend = function(){
															var binary = "";
															var bytes = new Uint8Array(reader.result);
															var length = bytes.byteLength;
															for (var i = 0; i < length; i++)
															{
																binary += String.fromCharCode(bytes[i]);
															}
															uploadAttachment(new sforce.Base64Binary(binary).toString(),fName,fType);
														};
													}
												}, options
											);
										});
									}else{
										// end my code
										var reader = new FileReader();
										reader.onloadend = function(){
											var binary = "";
											var bytes = new Uint8Array(reader.result);
											var length = bytes.byteLength;
											for (var i = 0; i < length; i++)
											{
												binary += String.fromCharCode(bytes[i]);
											}
											uploadAttachment(new sforce.Base64Binary(binary).toString(),fName,fType);
									};
									reader.readAsArrayBuffer(inputfile);
								}
							}
							}
							item.value = $("[name='" + item.fieldName + "']").val();
						});
						if(sendFile == false) {
							if($("[name='message']").val()) {
								$('#message').mentionsInput('val', function(text) {
									chataction.layout.items[messageItemIndex].value = text;
									sendPostAction(JSON.stringify(chataction.layout), fBaseStr, fType, fName);
								});
							}
							else {
								sendPostAction(JSON.stringify(chataction.layout), fBaseStr, fType, fName);
							}
						}
					}
					else {
						$("form[name='postform']").data('validator').showErrors(); 
						enableBtn('mesbtn');
					}
				}

				function updateAction(text) {
					if( checkTopicsCount(text) == -1 ) return ;
					hideFeedError();
					disableBtn('svbtn');
					var messageItemIndex = -1;

					if(idForEditPost){
						if($("form[name='editform']").data('validator').checkForm()) {
							_.each(chatactionForEdit.layout.items, function(item) {
								messageItemIndex = chatactionForEdit.layout.items.indexOf(item);
								item.value = $("#modalDialog [name='message']").val();
							});
							if($("#modalDialog [name='message']").val()) {
								$('#modalDialog #message').mentionsInput('val', function(text) {
									chatactionForEdit.layout.items[messageItemIndex].value = text;
									updateFeedPostAction(JSON.stringify(chatactionForEdit.layout));
								});
							}
						}
						else {
							$("form[name='editform']").data('validator').showErrors(); 
							enableBtn('svbtn');
						}
					}
					if(idForEditComment){
						$('#modalDialog #message').mentionsInput('val', function(text) {
							hideFeedError();
							var params = {
								'inText' 	 : text, 
								'commId'	 : idForEditComment
							};
							Visualforce.remoting.Manager.invokeAction(
								'{!$RemoteAction.CommunityFeedController.updateComment}',
								params,
								function(result, event) {
									if (event.result) {
										_.templateSettings.variable = 'rc';
										var template = _.template($('#ttp21').html() + $('#ttp2').html());
										var tt = jsonObj(result);
										$('#m'+tt.items[0].id).replaceWith(template(tt));		
										closeEditDialog(tt.items[0].id);
										setActiveli();
										$('#modalDialog #message').val('');
										if (typeof(switchToMemberMode) == 'function') switchToMemberMode();
									}
									else {
										showFeedError('{!JSENCODE($Label.ERR_Comment_Too_Large)}');
									}
									enableBtn('svbtn');
								}
							);
						});
					}
				}

				function insertAttIntoFeed(attId, jsontext) {
					hideFeedError();
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.insertAttacmentIntoFeed}',
						'{!JSENCODE(parentId)}',
						attId,
						jsontext,
						function(result, event){
							if(event.result){
								enableBtn('mesbtn');
								refreshFeed();
								bodyObjects = [];
								editMessageText = '';
								$('#message').val('');
								setActiveli();
								if (typeof(switchToMemberMode) == 'function') switchToMemberMode();
							}
							else {
								showFeedError(event.message);
							}
							enableBtn('mesbtn');
						}
					);
					
				}

				function updateFeedPostAction (jsontext) {
					Visualforce.remoting.timeout = 120000;
					var err = false;
					var params = {
						'parentId'	 : '{!JSENCODE(parentId)}',
						'inText' 	 : jsontext, 
						'feedId'	 : idForEditPost
					};
					hideFeedError();
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.updateFeed}',
						params,
						function(result, event) {
							if (event.result) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#ttp1').html() + $('#ttp2').html() + $('#ttp3').html());
								var tt = jsonObj(result);
								$('#m'+tt.elements[0].id).replaceWith(template(tt));		
								closeEditDialog();
								setActiveli();
								$('#modalDialog #message').val('');
								if (typeof(switchToMemberMode) == 'function') switchToMemberMode();
							} 
							else {
								showFeedError(event.message);
							}
							enableBtn('svbtn');
						}
					);					
				}

				function sendPostAction (jsontext, infilebstr, infiletype, infilename) {
					Visualforce.remoting.timeout = 120000;
					var err = false;
					var params = {
						'parentId'	 : '{!JSENCODE(parentId)}',
						'jsontext'	 : jsontext,
						'infilebstr' : infilebstr,
						'infiletype' : infiletype,
						'infilename' : infilename,
						'topicId' 	 : '{!JSENCODE(topicId)}'
					};
					hideFeedError();
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.postActions}',
						params,
						function(result, event) {
							if (event.result) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#ttp1').html() + $('#ttp2').html() + $('#ttp3').html());
								var tt = jsonObj(result);
								$('#cfcmp').prepend(template(tt));
								_.each(chataction.layout.items, function(item) {
									$("[name='" + item.fieldName + "']").val('');
								});
								bodyObjects = [];
								editMessageText = '';
								setActiveli();
							}
							else {
								showFeedError(event.message);
							}
							enableBtn('mesbtn');
						}
					);
					if (typeof(switchToMemberMode) == 'function') switchToMemberMode();
				}

				function muteFeed(feedid, isMutedByMe){
					disableBtn('mesbtn');
					var params = {'feedId' 			: feedid, 
								  'isMutedByMe' 	: isMutedByMe };

					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.muteFeeds}',
						params,
						function(result, event) {
							if (event.result) {
								$('#m'+feedid).remove();
								if (typeof(switchToMemberMode) == 'function') switchToMemberMode();
							}
							else {
								showFeedError(event.message);
							}
							enableBtn('mesbtn');
						}
					);
						
				}

				function getComments(feedid, token) {
					hideFeedError();
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.getComments}',
						feedid,
						token,
						function(result, event) {
							if (event.result) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#ttp21').html() + $('#ttp2').html());
								var tt = jsonObj(result);
								$('#c'+tt.feedId).prepend(template(tt));
								$('#l'+tt.feedId).css('display',tt.showNextComments?'block':'none').attr('onclick','getComments(\'' + tt.feedId + '\',\'' + tt.nextPageToken + '\');return false;');
							}
							else {
								showFeedError(event.message);
							}
						}
					);
				}

				
				var checkTopicsCount = function (text) {
					if({!!isTopicAssignmentCreateable}) return 1;
					var pos = 0;
					var countTopicsBeforeEdit = 0;
					_.each(namesTopicsEdit, function(nte){
						if(text.toLowerCase().indexOf(nte.toLowerCase()) != -1){
							countTopicsBeforeEdit += text.toLowerCase().split(nte.toLowerCase()).length-1;
						}
					});						
					var numbertopics = countTopicsEdit;
					do {
						var foundPos = text.indexOf('#[', pos);
						numbertopics = foundPos!=-1? numbertopics+1:numbertopics;
						pos = foundPos + 1;
					}
					while (foundPos!=-1);
					numbertopics = numbertopics - countTopicsBeforeEdit;
					if(numbertopics>10) {
						showFeedError("{!$Label.ERR_Maximum_number_topics}");
						numbertopics = 0;
						return -1;
					}
					return 1;
				}
				function postComment(text, feedid, size) {
					disableBtn('b'+feedid);
					$('#a'+feedid).mentionsInput('val', function(text) {
						hideFeedError();
						Visualforce.remoting.Manager.invokeAction(
							'{!$RemoteAction.CommunityFeedController.postComment}',
							feedid,
							text,
							function(result, event) {
								if (event.result) {
									_.templateSettings.variable = 'rc';
									var template = _.template($('#ttp21').html() + $('#ttp2').html());
									var tt = jsonObj(result);
									$('#d'+tt.feedId).before(template(tt));
									$('#a'+tt.feedId).val('');
								}
								else {
									showFeedError(event.message);
								}
								enableBtn('b'+feedid);
							}
						);
					});
				}
				function focusComment(inid) {
					$('#c'+inid).show();
					$('#s'+inid).show();
					$('#a'+inid).focus();
					checkmi($('#a'+inid)[0]);
				}
				function disableBtn(inid,inm) {
					$('#'+inid).attr('disabled','disabled').css('opacity','0.75');
					if (inm==undefined) {
						$('#'+inid).css('min-width',$('#'+inid).css('width'))
					}
					$('#'+inid+' span').hide();
					$('#'+inid+' i').show();
				}
				function enableBtn(inid) {
					$('#'+inid).removeAttr('disabled').css('opacity','1');;
					$('#'+inid+' i').hide();
					$('#'+inid+' span').show();
				}
				function inlAct(inpid,ins,ini) {
					$('#ul'+inpid+' .'+ins).removeClass(ins).removeClass('active').addClass('fa-spinner fa-pulse').attr('name',ins);
					hideFeedError();
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.inlineAction}',
						inpid,
						ins,
						ini,
						function(result, event) {
							if (event.result) {
								var tt = jsonObj(result);
								if (tt.cname=='fa-times') {
									$('#m'+tt.pid).remove();
									if (typeof(switchToMemberMode) == 'function') switchToMemberMode();
								}
								else {
									var nocl = 'inlAct(\''+tt.pid+'\',\''+tt.cname+'\',\''+tt.oid+'\');';
									$('#ul'+tt.pid+' [name="'+tt.cname+'"]').removeClass('fa-spinner fa-pulse').addClass(tt.cname+tt.stl).attr('onclick',nocl);
									if (tt.cname=='fa-thumbs-up') {
									var dti = parseInt($('#m'+tt.pid+' .results-list span').first().text());
									$('#m'+tt.pid+' .results-list span').first().text(tt.oid==''?(dti-1):(dti+1));
									}
								}
						}
							else {
								showFeedError(event.message);
							}
						}
					);
				}
				function initTextareaBTN(element) {
					$(element).mentionsInput({
						onDataRequest:function (mode, query, callback) {
							Visualforce.remoting.Manager.invokeAction(
								'{!$RemoteAction.CommunityFeedController.getUsers}',
								query,
								function(result, event) {
									callback(jsonObj(result));
								}
							);
						},
						elastic: false
					}).focus();
				}
				
				function initTextarea(element) {
					$(element).mentionsInput({
						onDataRequest:function (mode, charValue, query, callback) {
							if(charValue == '@') {
								Visualforce.remoting.Manager.invokeAction(
									'{!$RemoteAction.CommunityFeedController.getUsers}',
									query,
									function(result, event) {
										callback(jsonObj(result));
									}
								);
							}
							else if(charValue == '#') {
								Visualforce.remoting.Manager.invokeAction(
									'{!$RemoteAction.CommunityFeedController.getTopics}',
									query,
									function(result, event) {
										callback(jsonObj(result));
									}
								);
							}
						},
						elastic: false,
						editMessage: editMessageText,
						prefillMentions: bodyObjects
					}).css('height',editMessageText.length ? $('#editPanel #message').get(0).scrollHeight+'px' : '78px').css('min-height', '78px').focus().setCursorPosition(0);
				}

				$.fn.setCursorPosition = function (pos) {
				    this.each(function (index, elem) {
				        if (elem.setSelectionRange) {
				            elem.setSelectionRange(pos, pos);
				        } else if (elem.createTextRange) {
				            var range = elem.createTextRange();
				            range.collapse(true);
				            range.moveEnd('character', pos);
				            range.moveStart('character', pos);
				            range.select();
				}
				    });
				    return this;
				};


				function checkmi(element) {
					if(!$(element).attr('data-mentions-input')) {
						initTextarea(element);
					}
				}
				function checkbtn(element,btnid) {
					if (element.value.trim()=='') {
						$(btnid).attr('disabled','disabled').css('opacity','0.75');;
					}
					else if ($(btnid).attr('disabled')) {
						$(btnid).removeAttr('disabled').css('opacity','1');;
					}
				}
				var chataction = {loading:false};
				function setActiveli(element) {
					var previousText = $('#message').val();
					if(previousText.length){
						$('#message').mentionsInput('getMentions', function(text) {
							bodyObjects = text;
						});
						editMessageText = previousText;
					}
								
					if(!element) element = $("#palist a").get(0); 
					if (!chataction.loading) {
						hideFeedError();
						chataction.loading = true;
						$('#palist a').removeClass('curr');
						$(element).addClass('curr');
						$(element).find('i').removeClass(element.name).addClass('fa-spinner fa-pulse');
						// params for invoke remote actions
						var resultLayout = null;
						var invokeActionStr = '{!$RemoteAction.CommunityFeedController.actionLayout}';
						var invokeActionParam = element.id;
						// for not FeedItem actions
						if(element.id.indexOf("FeedItem") == -1) {
							invokeActionStr = '{!$RemoteAction.CommunityFeedController.actionLayoutSForce}'
							var namesActionsPref = ['{!packagePrefix}'+element.id];
							var namesActions = [element.id];
							var __sfdcSessionId = '{!GETSESSIONID()}';
							sforce.connection.serverUrl = '{!$Site.Prefix}/services/Soap/u/33.0';
							sforce.connection.sessionId = __sfdcSessionId;
							var resultLayoutSF = new sforce.SObject('QuickAction.DescribeQuickActionResult');
							resultLayoutSF = sforce.connection.describeQuickActions(namesActions);
							if(resultLayoutSF == ''){
								resultLayoutSF = sforce.connection.describeQuickActions(namesActionsPref);
							}
							var stringResult = namesActions + "," + resultLayoutSF[0].targetSobjectType;
							_.each(resultLayoutSF[0].layout.layoutRows, function(rows){
								stringResult +=","+rows.layoutItems[0].label+':'+rows.layoutItems[0].required;
							});
							
							resultLayout = JSON.stringify(stringResult);
							invokeActionParam = resultLayout;
						}
						Visualforce.remoting.Manager.invokeAction(
							invokeActionStr,
							invokeActionParam,
							function(result, event) {
								if (event.result) {
									chataction.loading = false;
									chataction.layout = jsonObj(result);
									_.templateSettings.variable = 'rc';
									var template = _.template($('#atp').html());
									$('#postarea').html(template(chataction.layout));
									var aname = $('#palist .fa-spinner').closest('a').attr('name');
									$('#palist .fa-spinner').removeClass('fa-spinner fa-pulse').addClass(aname);
									initValidator();
								
									//previous text
									if(editMessageText.length){
										checkmi($('#postarea #message'));
									}
								
									//datetime
									if($('.validate-datetimepicker')) {
										var currentdate = new Date(); 
										var datetime = (currentdate.getMonth()+1) + '/' + currentdate.getDate() + '/' + currentdate.getFullYear() + ' ' + currentdate.getHours() + ":"  + currentdate.getMinutes();
										$('.validate-datetimepicker').datetimepicker({
											minDate:datetime,
											format:'m/d/Y h:i A',
											formatTime:'h:i A',
											formatDate:'m/d/Y',
											step:30
										});
									}
									//date
									if(jQuery('.validate-datepicker')) {
										var currentdate = new Date(); 
										var datetime = (currentdate.getMonth()+1) + '/' + currentdate.getDate() + '/' + currentdate.getFullYear();
										$('.validate-datepicker').datetimepicker({
											timepicker:false,
											minDate:datetime,
											format:'m/d/Y',
											formatDate:'m/d/Y',
										});
								}
							}
								else {
									showFeedError(event.message);
								}
							}
						);
					}
				}
				function addPollChoiceInputElement (t) {
					var t_el = $(t);
					var totalChoices = t_el.parent().find('input[name*="choice"]');
					var mkp = '<section><label class="label input">Choice {0}</label><label class="input"><input id="choice{0}" name="choice{0}" type="text" required="required" class="form-control" data-field-for-post aria-required="true"/></label></section>';
					var nextChoice = (totalChoices.length+1);
					$(mkp.replace(/\{0}/g, nextChoice)).insertBefore(t_el);
					var lastitemcopy = chataction.layout.items[chataction.layout.items.length-1];
					var newitemcopy = lastitemcopy.constructor(); // changed
					for(var key in lastitemcopy) {
						if(lastitemcopy.hasOwnProperty(key)) {
							newitemcopy[key] = lastitemcopy[key];
						}
					}
					newitemcopy.label = 'Choice ' + nextChoice;
					newitemcopy.fieldName = 'choice' + nextChoice;
					newitemcopy.required = false;
					newitemcopy.requiredAttr = '';
					chataction.layout.items = chataction.layout.items.concat([newitemcopy]);
					nextChoice++;
					if (nextChoice == 11) {
						t_el.remove();
					}
				}
				
				function vote(t) {
					var t_el = $(t);
					var choice = t_el.parent().find('input[type=radio]:checked');
					if (choice) {
						var cName = choice.attr('name');
						var pollId = cName.substring(cName.indexOf('__')+2, cName.length);
						t_el.parent().find('input[type=radio]:checked');
						t_el.attr('disabled', true);
						hideFeedError();
						var params = {	'pollId' 		: pollId,
										'choiceId' 	 	: choice.attr("id"),
										'inParentId'	: '{!JSENCODE(parentId)}',
										'inFeedType' 	: '{!feedType}',
										'fromEmail'		: '{!fe}' };
						if(_.contains(changeVoteIds, pollId)){
							changeVoteIds.splice(changeVoteIds.indexOf(pollId), 1);
						}					
						Visualforce.remoting.Manager.invokeAction(
							'{!$RemoteAction.CommunityFeedController.votesOnPoll}',
							params,
							function(result, event) {
								if (event.result) {
									_.templateSettings.variable = 'rc';
									var template = _.template($('#ttp1').html() + $('#ttp2').html() + $('#ttp3').html());
									var tt = jsonObj(result);
									$('#cfcmp').empty();
									$('#cfcmp').prepend(template(tt));
									t_el.removeAttr('disabled');
								}
								else {
									showFeedError(event.message);
								}
							}
						);
					}
					setActiveli();
				}

				function editPost(objId){
					$('#editPanel').modal('toggle');
					idForEditPost = objId;
					var params = {'parentId' : '{!JSENCODE(parentId)}', 
								'feedType' 	 : '{!feedType}',
								'inpt'		 : null, 
								'feedId' 	 : objId};
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.feedFromEmail}',
						params,
						function(result, event) {
							if (event.result) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#etp').html());
								var tt = jsonObj(result);
								$('#modalDialog').empty();
								$('#modalDialog').prepend(template(tt));
								//$('.preloader__container').hide();
								initValidator(true);
								checkmi($('#editPanel textarea'));
							}else{
								showFeedError(event.message);
							}
						}
					);
				}

				function editComment(objId){
					$('#editPanel').modal('toggle');
					idForEditComment = objId;
					var params = {
						'commentId'	 	: objId
					};
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.getCommentForEdit}',
						params,
						function(result, event) {
							if (event.result) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#etp').html());
								var tt = jsonObj(result);
								$('#modalDialog').empty();
								$('#modalDialog').prepend(template(tt));
								//$('.preloader__container').hide();
								initValidator(true);
								checkmi($('#editPanel textarea'));
							}else{
								showFeedError(event.message);
							}
						}
					);
				}

				function closeEditDialog(){
					$('#editPanel').modal('toggle');
					$('#modalDialog #message').val('');
					idForEditPost = '';
					idForEditComment = '';
					bodyObjects = [];
					editMessageText = '';
					countTopicsEdit = 0;
					namesTopicsEdit = [];

				}

				function refreshFeed() {
					hideFeedError();
					var top = '{!topicId}';
					if(viewFromEmail){
						$('#cfcmp').empty();
						loadFeedFromEmail('');
					}else if(top){
						$('#cfcmp').empty();
						loadFeedsForTopic(null);
						if({!!isTopicAssignmentCreateable}){
							$('#palist').hide();
							$('#postarea').hide();
						}
					}else{
					Visualforce.remoting.Manager.invokeAction(
						'{!$RemoteAction.CommunityFeedController.feeds}',
						'{!JSENCODE(parentId)}',
						'{!feedType}',
						'',
						function(result, event) {
							if (event.result) {
								_.templateSettings.variable = 'rc';
								var template = _.template($('#ttp1').html() + $('#ttp2').html() + $('#ttp3').html());
								var tt = jsonObj(result);
								$('#cfcmp').empty();
								$('#cfcmp').prepend(template(tt));
							}
							else {
								showFeedError(event.message);
							}
						}
					);
				}
				}
				function changeVote(voteId){
					_.templateSettings.variable = 'rc';
					changeVoteIds.push(voteId);
					if(_.contains(viewResultsArray, voteId)){
						viewResultsArray.splice(viewResultsArray.indexOf(voteId), 1);
					}				
					refreshFeed();
				}

				function changeVoteId(voteId){
					return _.contains(changeVoteIds, voteId);
				}

				function viewRes(pollId){
					return _.contains(viewResultsArray, pollId);
				}
				
				function viewResults(pollId){
					_.templateSettings.variable = 'rc';
					if(!_.contains(viewResultsArray, pollId)){
						viewResultsArray.push(pollId);
					}else{
						viewResultsArray.splice(viewResultsArray.indexOf(pollId), 1);
					}
					if(_.contains(changeVoteIds, pollId)){
						changeVoteIds.splice(changeVoteIds.indexOf(pollId), 1);
					}
					refreshFeed();
				}
				function initValidator (editFlag) {
					chatactionForEdit = (chatactionForEdit && chatactionForEdit.layout) ? chatactionForEdit : _.clone(chataction);
					var elementForValidate;
					if(editFlag){
						elementForValidate = $("form[name='editform']");
					}else{
						elementForValidate = $("form[name='postform']");
					}
					if(elementForValidate[0]) {
						elementForValidate.validate({
							onkeyup: false,
							focusCleanup: true,
							focusInvalid: false,
							rules: {
							},
							highlight: function(element) {
								$(element).closest("label[class*='input']").addClass('state-error');
							},
							unhighlight: function(element) {
								$(element).closest("label[class*='input']").removeClass('state-error');
							},
							errorElement: 'div',
							errorClass: 'note note-error',
							errorPlacement: function(error, element) {
								if(element.parent('.section').length) {
									if(element.attr('id') == 'message') {
										error.insertAfter($(element).closest("textarea[id='message']").parent());
									}
									else {
										error.insertAfter($(element).closest("label[class*='input']").parent());
									}
								} 
								else {
									if(element.attr('id') == 'message') {
										error.insertAfter($(element).closest("textarea[id='message']"));
									}
									else {
										error.insertAfter($(element).closest("label[class*='input']"));
									}
								}
							}
						});
						if(chataction.layout) {
							_.each(chataction.layout.items, function(item) {
								if(item.fieldName == 'message') {
									messageItemIndex = chataction.layout.items.indexOf(item);
								}
								var currentItem = editFlag ? $("#modalDialog [name='message']") : $("[name='" + item.fieldName + "']");
								if(currentItem) {
									if(currentItem.rules()) {
										currentItem.rules('remove');
									}
									currentItem.rules('add', { required : item.required });
									if(item.inputtype == 'url') {
										currentItem.rules('add', { url : true });
									}
								}
							});
						}
						else {
							$("[name='message']").rules('add', { required : true });
						}
					}
				}
				function fileSizeIEC(a,b,c,d,e){
					return (b=Math,c=b.log,d=1024,e=c(a)/c(d)|0,a/b.pow(d,e)).toFixed(0)+' '+(e?'KMGTPEZY'[--e]+'B':'Bytes')
				}
			</script>
		</apex:outputPanel>
	</div>
	<script>
		function parseFeedBody(o,t){
			var outString = "";
			_.each(o.messageSegments,function(item){
				if(item.record != null){
					if(item.record.id.indexOf("005") == 0){
						outString += '<a href="{!IF(isUnityTemplate,$Page.UnityProfilePage,$Page.CommunityProfilePage)}?id='+item.record.id+'">@'+item.name+'</a>';
					}else{
						outString += '<a href="{!$Page.CommunityGroupDetailPage}?gr='+item.record.id+'">@'+item.name+'</a>';
					}
				}
				if(item.text != null && (item.type == "Text" || item.type == "Link")){
					if(item.type == "Link"){
						if(item.text.indexOf('@') != -1){
							outString += '<a href="mailto:'+item.text+'">'+item.text+'</a>';
						}else if(item.text.indexOf('ftp') == 0){
							outString += '<a target="_blank" href="ftp:'+item.text.split('ftp:')[1]+'">'+item.text+'</a>';
						}else if(item.text.indexOf('http') == 0) {
							outString += '<a target="_blank" href="'+item.text+'">'+item.text+'</a>';
					}else{
							outString += '<a target="_blank" href="http://'+item.text+'">'+item.text+'</a>';
						}
					}else{
					outString += item.text;
				}
				}
				if(item.type == 'Hashtag'){
					var topicObj = {}; _.each(_.values(t), function(val){
						topicObj[val.id] = val.name.toLowerCase();
					});
					var itemText = item.text.substring(1).toLowerCase().toString();
					itemText = _.unescape(itemText);
					itemText = itemText.replace(/&#39;/g,"'");
					itemText = itemText.replace(/&#92;/g,"\\");
					outString += '<a href="{!$Page.CommunityTopic}?id='+_.invert(topicObj)[itemText]+'&pid={!parentId}">'+item.text+'</a>';
				}
			});
			return outString;
		}

		function parseFeedBodyEdit(o){
			editMessageText = '';
			_.each(o.messageSegments,function(item){
				item.text = item.record != null ? item.text.replace('@','@[') + ']' : item.text;
				item.text = item.type == 'Hashtag' ? item.text.replace('#','#[') + ']' : item.text;
				editMessageText += item.text;
			});
			return editMessageText;
		}

		function parseBody(o, t){
			bodyObjects = [];
			_.each(o.messageSegments,function(item){
				var objectMention = {};
				if(item.record != null){
					objectMention['id'] = item.record.id;
					objectMention['name'] = _.unescape(item.name).replace(/&#39;/g,"'").replace(/&#92;/g,"\\");
					objectMention['value'] = _.unescape(item.name).replace(/&#39;/g,"'").replace(/&#92;/g,"\\");
					if(item.record.id.indexOf("005") == 0){
						objectMention['type'] = 'user';
					}else{
						objectMention['type'] = 'group';
					}
				}else if(item.type == 'Hashtag'){
					var topicObj = {}; _.each(_.values(t), function(val){
						topicObj[val.id] = val.name.toLowerCase();
					});
					var itemText = item.text.substring(1).toLowerCase().toString();
					itemText = _.unescape(itemText);
					itemText = itemText.replace(/&#39;/g,"'");
					itemText = itemText.replace(/&#92;/g,"\\");
					itemText = itemText.replace("[","").replace("]","");
					objectMention['id'] = _.invert(topicObj)[itemText];
					objectMention['name'] = item.text;
					objectMention['value'] = item.text;
					objectMention['type'] = 'topic';	
				}
				if(!_.isEmpty(objectMention)) bodyObjects.push(objectMention);
			});
			namesTopicsEdit = [];
			if(idForEditComment.length > 0){
				var topicsArray = $('#m'+idForEditComment).parent().parent().find('[id*="topiclabel"] a'); 
				_.each(topicsArray, function(top){
					if(!top.id.length){ 
						namesTopicsEdit.push('#['+top.text+']');
					}
				});
				countTopicsEdit = namesTopicsEdit.length;
			}else{
			_.each(t, function(top){
				if(top.entityId != null){ 
						namesTopicsEdit.push('#['+top.name+']');
				}

			});
				countTopicsEdit = namesTopicsEdit.length;
			}
		}

		function wrapnl(intext) {
			return intext ? intext.replace(/\r\n/g, '<br />').replace(/[\r\n]/g, '<br />') : '';
		}
		var selector = '';
		function wraptop(inObj, inId){
			var outString = "";
			var count = 1;
			_.each(inObj, function(top){
				if(top.entityId != null){ 
					outString += '<a href="{!$Page.CommunityTopic}?id='+top.id+'&pid={!parentId}">'+top.name.replace(/</g,"&lt;").replace(/>/g,"&gt;")+'</a>, ';
				}
			});
			if(outString.lastIndexOf(',') == outString.length-2){
				outString = outString.substring(0, outString.length-2);
			}
			
			return outString;
		}
		$(document).ready(function() {
			if($("form[name='postform']")[0]) {
				initValidator();
				setActiveli();
			}
		});
	</script>
</apex:component>