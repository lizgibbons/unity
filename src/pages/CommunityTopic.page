<!--  
 * Unity - Communities
 * 
 * Community is critical to the student experience--but building community is 
 * just plain hard. Built on Communities and designed specifically for higher ed, 
 * Unity is a powerful networking tool to help you generate engagement and 
 * connect your campus.
 * 
 * Copyright (C) 2015 Motivis Learning Systems Inc.
 * 
 * This program is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 * 
 * To contact Motivis Learning Systems Inc.
 * 25 Pelham Road
 * Salem, NH 03790
 * unity@motivislearning.com
-->

<apex:page controller="CommunityTopicController" showHeader="false" sideBar="false" standardStylesheets="false" docType="html-5.0" applyBodyTag="false" applyHtmlTag="false">
    <apex:composition template="{!$Site.Template}">
        <apex:define name="title">{!$Label.LBL_Page_Title}</apex:define>
        <apex:define name="body">
            <div ng-app="TopicsApp" ng-controller="TopicsController">
                <div class="profile">
                    <div class="container content CommunityTopic">
                        <div class="row">
                                <!--LEFT-->
                            <div class="col-md-3 margin-bottom-40">
                                <c:CommunityUserPhoto />
                                <c:CommunityFeedNavigation pn="7" />
                            </div>
                            <!--LEFT-->
                            <!--MIDDLE-->
                            <div class="col-md-9">
                                <!-- Error Message -->
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="calert" ng-show="{!showTopics} && {!!topicExists}">
                                            <div class="message">
                                                <ul>
                                                    <li><p>{!$Label.ERR_Topic_Not_Available}</p>
                                                        <p>{!$Label.ERR_Topic_Not_Available_Message}</p>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- End :: Error Message -->
                                <div class="profile-body margin-bottom-20">
                                    <!-- Preloader -->
                                    <div class="preloader__container">
                                        <div class="preloader__element">
                                            <i class="fa fa-refresh fa-spin preloader__icon"></i>
                                        </div>
                                    </div>
                                    <!-- End :: Preloader -->
                                    <!-- Breadcrumbs -->
                                    <div id="topicBreadcrumb" class="row" ng-show="{!showTopics}">
                                        <div class="col-md-12">
                                            <ul class="pull-right breadcrumb">
                                                <li><a href="{!$Page.CommunityTopic}">{!$LAbel.LBL_Topics}</a></li>
                                                <li class="active"><span ng-bind-html="topic.Name"></span></li>
                                            </ul>
                                        </div>
                                    </div>
                                    <!-- End :: Breadcrumbs -->
                                    <!--CENTER-->
                                    <apex:outputPanel styleClass="panel panel-profile" id="centerContent" layout="block" rendered="{!!showTopics}">
                                        <!--QUICK SEARCH -->
                                        <div class="padding-left-right-15"><h2>{!$Label.LBL_Topic}</h2></div>
                                        <div class="row margin-bottom-20 padding-left-right-15">
                                            <div class="col-md-5">
                                                <div class="input-group">
                                                    <input ng-model="quickSearchQuery" class="form-control" placeholder="Type a Name..." value="" id="quickSearchInput" />
                                                    <span class="input-group-btn">
                                                        <button id="quickSearchButton" class="btn-u">
                                                            <i class="fa fa-search"></i>
                                                        </button>
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="col-md-7">
                                                <div class="sorting__container">
                                                    <a href="#" class="sorting__button">
                                                        {!$Label.LBL_Show}
                                                        <span>
                                                            {{quickShow}}
                                                        </span>
                                                        {!$Label.LBL_Sorted_By}
                                                        <span>
                                                            {{quickSort}}
                                                        </span>
                                                    </a>
                                                    <!-- Options -->
                                                    <div class="sorting__options">
                                                        <!-- Show -->
                                                        <div class="sorting__options__group">
                                                            <!-- Title -->
                                                            <div class="sorting__options__group__title">
                                                                {!$Label.LBL_Show}
                                                            </div>
                                                            <!-- List -->
                                                            <ul id="show">
                                                                <li ng-repeat="showItem in showItems" ng-class="{active : showItem.active}" ng-click="setActive(showItem, 'show');">
                                                                    <i ng-show="showItem.active" ng-class="faCheck"></i>{{showItem.name}}
                                                                </li>
                                                            </ul>
                                                        </div>
                                                        <!-- End:: show items -->
                                                        <!-- Sort -->
                                                        <div class="sorting__options__group">
                                                            <!-- Title -->
                                                            <div class="sorting__options__group__title">
                                                                {!$Label.LBL_Sorted_By}
                                                            </div>
                                                            <!-- List -->
                                                            <ul id="sort">
                                                                <li ng-repeat="sortItem in sortItems" ng-class="{active : sortItem.active}" ng-click="setActive(sortItem, 'sort');">
                                                                    <i ng-show="sortItem.active" ng-class="faCheck"></i>{{sortItem.name}}
                                                                </li>
                                                            </ul>
                                                        </div>
                                                        <!-- End:: sort items -->
                                                    </div>
                                                    <!-- End :: Options -->
                                                </div>
                                            </div>
                                        </div>
                                        <!--QUICK SEARCH -->
                                        <div class="tab-v1">
                                            <div class="tab-content">
                                                <apex:outputPanel layout="none">
                                                    <div class="tab-pane active">
                                                        <div class="col-md-12">
                                                            <table class="table media__table">
                                                                <tr ng-repeat="t in allTopics | orderBy:quickSortVal | quickSort:this | quickSearch:this | startFrom:page.startFrom() | limitTo:page.pageSize">
                                                                    <td class="media__table__td__link">
                                                                        <a href="{!$Page.CommunityTopic}?id={{ t.Id }}">
                                                                            <div ng-bind-html="t.Name"></div>
                                                                        </a>
                                                                    </td>
                                                                    <td class="media__table__td__talking">
                                                                        {{t.TalkingAbout}} {{t.Text}}
                                                                    </td>
                                                                    <td class="media__table__td__buttons" ng-show="isFeedTraking">
                                                                        <button class="btn-u" ng-hide="t.TopicIsFollowing" ng-click="followAction(t);"><i class="fa fa-plus-circle"></i>Follow</button>
                                                                        <button class="btn-u btn-u-blue" ng-show="t.TopicIsFollowing" ng-click="unFollowAction(t);"><i class="fa fa-check"></i>{!$Label.BTN_Following}</button>
                                                                    </td>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                        <div class="col-md-12">
                                                            <ul class="pager">
                                                                <li class="previous" ng-hide="page.currentPage == 1 || page.totalPages() == 0">
                                                                    <a href="javascript:;" ng-click="page.goToFirst();">{!$Label.LBL_First}</a>
                                                                </li>
                                                                <li class="previous" ng-hide="page.currentPage == 1 || page.totalPages() == 0">
                                                                    <a class="margin-left-5" href="javascript:;" ng-click="page.goToPrev();">{!$Label.LBL_Previous}</a>
                                                                </li>
                                                                <li ng-hide="page.totalPages() == 0">
                                                                    {!$Label.LBL_Page}&nbsp;{{ page.currentPage }}&nbsp;{!$Label.LBL_of}&nbsp;{{ page.totalPages() }}
                                                                </li>
                                                                <li ng-hide="page.totalPages() != 0">
                                                                    <div class="alert alert-danger">{!$Label.ERR_No_Topics_To_Display}</div>
                                                                </li>
                                                                <li class="next" ng-hide="page.currentPage >= page.totalPages()">
                                                                    <a class="margin-left-5" href="javascript:;" ng-click="page.goToLast();">{!$Label.LBL_Last}</a>
                                                                </li>
                                                                <li class="next" ng-hide="page.currentPage >= page.totalPages()">
                                                                    <a href="javascript:;" ng-click="page.goToNext();">{!$Label.LBL_Next}</a>
                                                                </li>
                                                            </ul>
                                                        </div>
                                                        <div class="clearfix"></div>
                                                    </div>
                                                </apex:outputPanel>
                                            </div>
                                        </div>
                                    </apex:outputPanel>
                                    <apex:outputPanel layout="block" id="feed" styleClass="profile-edit tab-pane fade in active" rendered="{!AND(showTopics,topicExists)}">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="pull-right">
                                                    <div class="dropdown__container">
                                                        <div class="dropdown__button">
                                                            <i class="dropdown__icon" ng-hide="deleteAction"></i>
                                                            <i class="fa fa-refresh fa-spin" ng-show="deleteAction"></i>
                                                        </div>
                                                        <div class="dropdown__options">
                                                            <div class="dropdown__option" ng-show="{!isTopicUpdateable}" ng-click="openDialog();">{!$Label.LBL_Edit_Details}</div>
                                                            <div class="dropdown__option" ng-show="{!isTopicDeleteable}" ng-click="deleteTopic();">{!$Label.LBL_Delete}</div>
                                                            <div class="dropdown__option" ng-hide="topic.MyFavorites" ng-click="addToFavorites();">{!$Label.LBL_Add_To_Favorites}</div>
                                                            <div class="dropdown__option" ng-show="topic.MyFavorites" ng-click="removeFromFavorites();">{!$Label.LBL_Remove_From_Favorites}</div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="pull-right" ng-show="isFeedTraking">
                                                    <button class="btn-u margin-right-10" ng-hide="topic.TopicIsFollowing" ng-click="followAction(topic);"><i class="fa fa-plus-circle"></i>&nbsp;Follow</button><button class="btn-u btn-u-blue margin-right-10" ng-show="topic.TopicIsFollowing" ng-click="unFollowAction(topic);"><i class="fa fa-check"></i>&nbsp;{!$Label.BTN_Following}</button>
                                                </div>
                                            </div>
                                        </div>
                                        <c:CommunityFeed tf="true" ti="{!topicId}" pid="{!parentId}"/>
                                    </apex:outputPanel>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                
                <script type="text/ng-template" id="detailTopicDialog">
                    <div class="CommunityTopicModal">
                        <h2>Edit details</h2>
                        <div class="sky-form margin-bottom-10">
                            <section>
                                <label for="" class="label">
                                    {!$Label.LBL_Name}
                                </label>
                                <div class="input disabled">
                                    <input type="text" id="nameInput" ng-model="name" ng-init="name=topic.Name" disabled="disabled"></input>
                                </div>
                            </section>
                            <section>
                                <label for="" class="label">
                                    {!$Label.LBL_Description}
                                </label>
                                <div class="textarea">
                                    <textarea name="" id="descrInput" ng-model="descr" ng-init="descr=topic.Description" rows="10" class="textarea"></textarea>
                                </div>
                            </section>
                            <section>
                                <div class="row">
                                    <div class="col-md-12">
                                        <button class="btn-u pull-right btn-u-default" ng-click="closeDialog()">{!$Label.BTN_Cancel}</button>
                                        <button class="btn-u pull-right margin-right-10" ng-click="updateTopic(name, descr)">{!$Label.BTN_Save}</button>
                                    </div>
                                </div>
                            </section>
                        </div>
                    </div>
                </script>
            </div>
        </apex:define>
        <apex:define name="scripts">
            <script type="text/javascript" src="{!$Resource.CommunityResources}/js/underscore/underscore-min.js" ></script>
            <script type="text/javascript" src="{!$Resource.CommunityResources}/js/angularjs/angular.min.js" ></script>
            <script type="text/javascript" src="//code.angularjs.org/1.4.0/angular-sanitize.js"></script>
            <script type="text/javascript" src="{!$Resource.assets}/plugins/ngDialog/js/ngDialog.min.js"></script>
            <apex:stylesheet value="{!$Resource.assets}/plugins/ngDialog/css/ngDialog.min.css" />
            <apex:stylesheet value="{!$Resource.assets}/plugins/ngDialog/css/ngDialog-theme-default.min.css" />
            <apex:stylesheet value="{!$Resource.assets}/plugins/ngDialog/css/ngDialog-theme-plain.min.css" />

            

            <script type="text/javascript">
                var TopicsApp = angular.module('TopicsApp', ['ngSanitize','ngDialog']);
                TopicsApp.factory('getTopics', ['$q', '$rootScope', function($q, $rootScope) {
                    return function() {
                        var deferred = $q.defer();
                        if ($rootScope.getDataStatus != 'InProgress') {
                            $rootScope.getDataStatus = 'InProgress';
							var params = {'topicId' : '{!JSENCODE(topicId)}' };
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.CommunityTopicController.getTopics}',
								params,
                                function(result, event) {
                                    $rootScope.$apply(function() {
                                        if (event.status) {
                                            deferred.resolve(result);
                                            $rootScope.getDataStatus = 'Finished';
                                        } else {
                                            deferred.reject(event);
                                            $rootScope.getDataStatus = 'Finished';
                                        }
                                    })
                                },
                                { buffer: true, escape: true, timeout: 30000 }
                            );
                        } else {
                            deferred = null;
                            return null;
                        }
                        return deferred.promise;
                    }
                }]);

                TopicsApp.factory('subscriberAction', ['$q', '$rootScope', function($q, $rootScope) {
                    return function(tId, isFollow) {
                        var deferred = $q.defer();
                        if ($rootScope.getDataStatus != 'InProgress') {
                            $rootScope.getDataStatus = 'InProgress';
                            Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.CommunityTopicController.subscriberAction}',
                                tId,
                                isFollow,
                                function(result, event) {
                                    $rootScope.$apply(function() {
                                        if (event.status) {
                                            deferred.resolve(result);
                                            $rootScope.getDataStatus = 'Finished';
                                        } else {
                                            deferred.reject(event);
                                            $rootScope.getDataStatus = 'Finished';
                                        }
                                    })
                                },
                                { buffer: true, escape: true, timeout: 30000 }
                            );
                        } else {
                            deferred = null;
                            return null;
                        }
                        return deferred.promise;
                    }
                }]);

                TopicsApp.filter('startFrom', function() {
                    return function(input, start) {
                        start = +start;
                        return input.slice(start);
                    }
                });
                TopicsApp.filter('quickSearch', function() {
                    return function(input, scope) {
                        var searchWords = scope.quickSearchQuery.match(/(\w){2,}/g);
                        if (searchWords) {
                            var reText = '';
                            for (var i = 0; i < searchWords.length; i++) {
                                reText += '(?=.*'+searchWords[i]+')';
                            }
                            var re = new RegExp(reText, "ig");
                            var output = [];
                            for (var j = 0; j < input.length; j++) {
                                if (input[j].Name.match(re) != null) {
                                    output.push(input[j]);
                                }
                            }
                            input = output;
                        }
                        scope.page.totalRecords = input.length;

                        // fix for filter pagination 
                        var round = input.length / (scope.page.pageSize * scope.page.currentPage);
                        if(Math.round(round) < 0.5){
                            var currPage = Math.ceil(input.length / scope.page.pageSize);
                            scope.page.currentPage = currPage < 1 ? 1 : currPage;
                        }

                        return input;
                    }
                });

                TopicsApp.filter('quickSort', function() {
                    return function(input, scope) {
                        var output = [];
                        // show section
                        if (scope.quickShow == '{!$Label.LBL_MyFavorites}') {
                            for (var j = 0; j < input.length; j++) {
                                if (input[j].MyFavorites == true) {
                                    output.push(input[j]);
                                }
                            }
                            
                        }else if(scope.quickShow == '{!$Label.LBL_TopicsIUse}'){
                            for (var j = 0; j < input.length; j++) {
                                if (input[j].iUse == true) {
                                    output.push(input[j]);
                                }
                            }
                        }else{
                            output = input;
                        }
                        //sort section
                        if(scope.quickSort == '{!$Label.LBL_Name}'){
                            scope.quickSortVal = '{!$Label.LBL_Name}';
                        }else{
                            scope.quickSortVal = '-{!$Label.LBL_Talking_About}';
                        }

                        input = output;
                        scope.page.totalRecords = input.length;

                        // fix for filter pagination 
                        var round = input.length / (scope.page.pageSize * scope.page.currentPage);
                        if(Math.round(round) < 0.5){
                            var currPage = Math.ceil(input.length / scope.page.pageSize);
                            scope.page.currentPage = currPage < 1 ? 1 : currPage;
                        }

                        return input;
                    }
                });

                TopicsApp.controller('TopicsController', ['$scope', '$filter' ,'getTopics', 'subscriberAction', 'ngDialog', function($scope, $filter, getTopics, subscriberAction, ngDialog){
                    $scope.quickSearchQuery = '';
                    $scope.sortItems = [{name:"{!$Label.LBL_PeopleTalkingAboutThis}",active:true}, {name:"{!$Label.LBL_Name}",active:false}];
                    $scope.showItems = [{name:"{!$Label.LBL_All}",active:true}, {name:"{!$Label.LBL_MyFavorites}",active:false},{name:"{!$Label.LBL_TopicsIUse}",active:false}];
                    $scope.quickSort = '{!$Label.LBL_PeopleTalkingAboutThis}';
                    $scope.quickSortVal = '';
                    $scope.quickShow = 'All';
                    $scope.active = 'active';
                    $scope.faCheck = 'fa fa-check';
                    $scope.page = {
                        pageSize: 10,
                        currentPage: 1,
                        totalRecords: 1,
                        totalPages: function() {
                            return Math.ceil($scope.page.totalRecords/$scope.page.pageSize);
                        },
                        changePageNumber : function () {
                            if($scope.page.currentPage < 1) {
                                $scope.page.currentPage = 1;
                            } else if ($scope.page.currentPage > $scope.page.totalPages()) {
                                $scope.page.currentPage = $scope.page.totalPages();
                            }
                        },
                        nowOnPage: function() {
                            return ($scope.page.currentPage*$scope.page.pageSize + $scope.page.pageSize < $scope.page.totalRecords)
                                ? $scope.page.currentPage*$scope.page.pageSize+$scope.page.pageSize 
                                : $scope.page.totalRecords;
                        },
                        goToLast: function() {
                            $scope.page.currentPage = $scope.page.totalPages(); 
                        },
                        goToFirst: function() {
                            $scope.page.currentPage = 1;
                        },
                        goToPrev: function() {
                            if ($scope.page.currentPage > 1) {
                                $scope.page.currentPage = $scope.page.currentPage - 1;
                            }
                        },
                        goToNext: function() {
                            if ($scope.page.currentPage < $scope.page.totalPages()) {
                                $scope.page.currentPage = $scope.page.currentPage + 1;
                            }
                        },
                        startFrom: function() {
                            return $scope.page.currentPage*$scope.page.pageSize-$scope.page.pageSize;
                        }
                    };
                    
                    $scope.setActive = function(item, type){
                        var i;
                        if(type == 'sort'){
                            for( i=0; i < $scope.sortItems.length; i++ ) {
                                $scope.sortItems[i].active = false;
                            }
                            $scope.quickSort = item.name;
                        }
                        if(type == 'show'){
                            for( i=0; i < $scope.showItems.length; i++ ) {
                                $scope.showItems[i].active = false;
                            }
                            $scope.quickShow = item.name;
                        }
                        item.active = true;
                        $(".sorting__options").toggle();
                        
                    }

                    $scope.followAction = function(t) {
                        t.TopicIsFollowing = true;
                        $('.media__table__td__buttons .btn-u').attr('disabled','disabled');
                        $('.media__table__td__buttons .btn-u').css('opacity','0.5');
                        $scope.followUnfollow(t.Id, t.TopicIsFollowing);
                    }
                    $scope.unFollowAction = function(t) {
                        t.TopicIsFollowing = false;
                        $('.media__table__td__buttons .btn-u').attr('disabled','disabled');
                        $('.media__table__td__buttons .btn-u').css('opacity','0.5');
                        $scope.followUnfollow(t.Id, t.TopicIsFollowing);
                    }
                    $scope.followUnfollow = function(tId, isFollow) {
                        var def = subscriberAction(tId, isFollow);
                        if (def != null) {
                            $scope.inProgress = false;
                            def.then(function(result) {
                                    if ($scope.inProgress == true) {
                                        $scope.followUnfollow();
                                    }else{
                                        $('.media__table__td__buttons .btn-u').removeAttr('disabled');
                                        $('.media__table__td__buttons .btn-u').css('opacity','1');
                                    }
                                },
                                function(error){
                                    console.log(error);
                                }
                            );
                        } else {
                            $scope.inProgress = true;
                        }
                        
                    };
                    $scope.updateTopicsScope = function () {
                        var def = getTopics();
                        
                        if (def != null) {
                            $scope.inProgress = false;
                            def.then(function(result) {
                                    $scope.allTopics = result;
                                    $scope.page.currentPage = 1;
                                    $scope.page.totalRecords = result.length;
                                    if ($scope.inProgress == true) {
                                        $scope.updateTopicsScope();
                                    }
                                    if('{!JSENCODE(topicId)}' != null){
                                        for(var i = 0; i < result.length; i++){
                                            if(result[i].Id == '{!JSENCODE(topicId)}'){
                                                $scope.topic = result[i];
                                            }
                                        }
                                    }
                                    
                                    $scope.isFeedTraking = {!isFeedTraking};
                                    $(".preloader__container").hide();
                                    if({!showTopics} && {!!topicExists}){
                                        $(".profile-body").hide();
                                    }
                                },
                                function(error){
                                    console.log(error);
                                    $scope.page.currentPage = 1;
                                }
                            );
                        } else {
                            $scope.inProgress = true;
                        }
                    };

                    $scope.updateTopic = function(name, descr){
                        
                        var tid = '{!JSENCODE(topicId)}';
                        var Jname = $('#nameInput').val();
                        var Jdescr = $('#descrInput').val();
                        Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.CommunityTopicController.updateTopic}',
                                descr,
                                tid,
                                function(result, event) {
                                    $scope.updateTopicsScope();
                                    ngDialog.close($scope.dialog.id);
                                });
                        
                    }

                    $scope.deleteTopic = function(){
                        var tid = '{!JSENCODE(topicId)}';
                        if(confirm('{!$Label.LBL_Sure_To_Delete_Topic}')){
                            $scope.deleteAction = true;
                            $(".dropdown__button").attr('disabled','disabled')
                            Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.CommunityTopicController.deleteTopic}',
                                    tid,
                                    function(result, event) {
                                        if(result.length > 0){
                                            errorStr = result;
                                            console.log('ERROR',errorStr);
                                        }else{
                                            return window.location = '{!$Page.CommunityTopic}';
                                        }
                                    });
                            $(".dropdown__options").hide();
                        }else{
                            return false;
                        }
                    }

                    $scope.addToFavorites = function(){
                        var tid = '{!JSENCODE(topicId)}';
                        Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.CommunityTopicController.addToFavorites}',
                                tid,
                                function(result, event) {
                                    if(result.length > 0){
                                        errorStr = result;
                                        console.log('ERROR',errorStr);
                                    }else{
                                        $scope.updateTopicsScope();
                                        return null;
                                    }
                                });
                        $(".dropdown__options").hide(); 
                                    
                    };

                    $scope.removeFromFavorites = function(){
                        var tid = '{!JSENCODE(topicId)}';
                        Visualforce.remoting.Manager.invokeAction(
                                '{!$RemoteAction.CommunityTopicController.removeFromFavorites}',
                                tid,
                                function(result, event) {
                                    if(result.length > 0){
                                        errorStr = result;
                                        console.log('ERROR',errorStr);
                                    }else{
                                        $scope.updateTopicsScope();
                                        return null;
                                    }
                                });
                        $(".dropdown__options").hide(); 
                    };

                    $scope.openDialog = function(){
                        $(".dropdown__options").hide(); 
                        $scope.dialog = ngDialog.open({ 
                                            template: 'detailTopicDialog',
                                            closeByEscape: true,
                                            scope: $scope
                                        });
                    };

                    $scope.closeDialog = function(){
                        ngDialog.close($scope.dialog.id);
                    }

                    $scope.updateTopicsScope();
                    
                    $scope.allTopics = [
                    ];
                    $scope.topic;
                    $scope.errorStr;
                    $scope.isFeedTraking = true;
                    $scope.deleteAction = false;
                    $scope.dialog;
                    window.scope = $scope;



                }]);
                
                $(".sorting__button").click(function() {
                    $(".sorting__options").toggle(); 
                    return false;
                });

                $(".dropdown__button").click(function() {
                    if(!$(".dropdown__button").attr('disabled')){
                        $(".dropdown__options").toggle(); 
                    }
                    return false;
                });

                $(document).click(function() {
                    $(".sorting__options").hide();
                    $(".dropdown__options").hide(); 
                });

                $(".sorting__options").click(function(e) {
                    e.stopPropagation();
                });

                $(".dropdown__options").click(function(e) {
                    $(".sorting__options").hide();
                    e.stopPropagation();
                });

            </script>
            
            </apex:define>
    </apex:composition>
</apex:page>